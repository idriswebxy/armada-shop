{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Search/SearchResults.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getMovie, getSearchedMovie } from \"../../actions/movie\";\nimport moment from \"moment\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBIcon, MDBContainer, MDBListGroup, MDBListGroupItem, MDBRow } from \"mdbreact\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nconst SearchResults = ({\n  results,\n  getSearchedMovie\n}) => {\n  results = results.slice(0, 10);\n  let searchResults = /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      width: 700,\n      height: 350\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, results && results.length !== 0 ? results.map(result => /*#__PURE__*/React.createElement(MDBListGroup, {\n    style: {\n      width: \"30rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/movie_details/\" + result.id,\n    onClick: () => getSearchedMovie(result.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: result.id,\n    style: {\n      backgroundColor: \"white\",\n      // display: \"block\",\n      color: \"black\",\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"5rem\"\n    },\n    src: `https://image.tmdb.org/t/p/w154${[result.poster_path]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, result.title, ` (${result.release_date ? moment(result.release_date).format(\"YYYY\") : \"N/A\"})`))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"No results found...\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }, searchResults);\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.movie.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  getMovie,\n  getSearchedMovie\n})(SearchResults);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Search/SearchResults.js"],"names":["React","useEffect","Link","connect","getMovie","getSearchedMovie","moment","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","MDBIcon","MDBContainer","MDBListGroup","MDBListGroupItem","MDBRow","Scrollbars","SearchResults","results","slice","searchResults","width","height","length","map","result","id","backgroundColor","color","padding","poster_path","title","release_date","format","mapStateToProps","state","isLoading","movie"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getMovie, getSearchedMovie } from \"../../actions/movie\";\nimport moment from \"moment\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardImage,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCol,\n  MDBIcon,\n  MDBContainer,\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBRow,\n} from \"mdbreact\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nconst SearchResults = ({ results, getSearchedMovie }) => {\n  \n  results = results.slice(0, 10);\n\n  let searchResults = (\n    <MDBContainer>\n      <Scrollbars style={{ width: 700, height: 350 }}>\n        {results && results.length !== 0 ? (\n          results.map((result) => (\n            <MDBListGroup style={{ width: \"30rem\" }}>\n              <MDBRow>\n                <MDBCol>\n                  <Link\n                    to={\"/movie_details/\" + result.id}\n                    onClick={() => getSearchedMovie(result.id)}\n                  >\n                    <div\n                      key={result.id}\n                      style={{\n                        backgroundColor: \"white\",\n                        // display: \"block\",\n                        color: \"black\",\n                        padding: \"10px\",\n                      }}\n                    >\n                      <img\n                        style={{ width: \"5rem\" }}\n                        src={`https://image.tmdb.org/t/p/w154${[\n                          result.poster_path,\n                        ]}`}\n                      />\n                      <MDBCol>\n                        {result.title}\n                        {` (${\n                          result.release_date\n                            ? moment(result.release_date).format(\"YYYY\")\n                            : \"N/A\"\n                        })`}\n                      </MDBCol>\n                    </div>\n                  </Link>\n                </MDBCol>\n              </MDBRow>\n            </MDBListGroup>\n          ))\n        ) : (\n          <div>\n            <div>No results found...</div>\n          </div>\n        )}\n      </Scrollbars>\n    </MDBContainer>\n  );\n\n  return <div>{searchResults}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.movie.isLoading,\n});\n\nexport default connect(mapStateToProps, { getMovie, getSearchedMovie })(\n  SearchResults\n);\n"]},"metadata":{},"sourceType":"module"}