{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"tachyons\";\nimport \"./App.css\";\nimport { store, history, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport config from \"./auth0.config.json\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst onRedirectCallback = appState => {\n  history.push(appState && appState.returnTo ? appState.returnTo : window.location.pathname);\n};\n\nconsole.log(\"====>\" + stor.store);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store.store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ConnectedRouter, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Auth0Provider, {\n  domain: config.domain,\n  clientId: config.clientId,\n  audience: config.audience,\n  redirectUri: config.redirectUri,\n  onRedirectCallback: onRedirectCallback,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/index.js"],"names":["React","ReactDOM","App","Provider","store","history","persistor","PersistGate","Auth0Provider","config","ConnectedRouter","createBrowserHistory","onRedirectCallback","appState","push","returnTo","window","location","pathname","console","log","stor","render","domain","clientId","audience","redirectUri","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,+CAAP;AACA,OAAO,0CAAP;AACA,OAAO,2BAAP;AACA,OAAO,UAAP;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,SAAzB,QAA0C,SAA1C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,oBAAT,QAAqC,SAArC;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvCR,EAAAA,OAAO,CAACS,IAAR,CACED,QAAQ,IAAIA,QAAQ,CAACE,QAArB,GAAgCF,QAAQ,CAACE,QAAzC,GAAoDC,MAAM,CAACC,QAAP,CAAgBC,QADtE;AAGD,CAJD;;AAKAC,OAAO,CAACC,GAAR,CAAY,UAAUC,IAAI,CAACjB,KAA3B;AAEAH,QAAQ,CAACqB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAElB,KAAK,CAACA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,eAAD;AAAiB,EAAA,OAAO,EAAEC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AACE,EAAA,MAAM,EAAEI,MAAM,CAACc,MADjB;AAEE,EAAA,QAAQ,EAAEd,MAAM,CAACe,QAFnB;AAGE,EAAA,QAAQ,EAAEf,MAAM,CAACgB,QAHnB;AAIE,EAAA,WAAW,EAAEhB,MAAM,CAACiB,WAJtB;AAKE,EAAA,kBAAkB,EAAEd,kBALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF,CADF,CADF,EAcEe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAdF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"tachyons\";\nimport \"./App.css\";\nimport { store, history, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport config from \"./auth0.config.json\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst onRedirectCallback = (appState) => {\n  history.push(\n    appState && appState.returnTo ? appState.returnTo : window.location.pathname\n  );\n};\nconsole.log(\"====>\" + stor.store)\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <ConnectedRouter history={history}>\n      <Auth0Provider\n        domain={config.domain}\n        clientId={config.clientId}\n        audience={config.audience}\n        redirectUri={config.redirectUri}\n        onRedirectCallback={onRedirectCallback}\n      >\n        <App />\n      </Auth0Provider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}