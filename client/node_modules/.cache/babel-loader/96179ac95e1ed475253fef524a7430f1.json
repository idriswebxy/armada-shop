{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieDetails.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail, getMovieVideo } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\"; // import SpinnerPage from \"../Layout/SpinnerPage\";\n\nimport StarRatings from \"react-star-ratings\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport { API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../../config\";\nimport \"./MovieDetails.css\";\nimport MovieThumb from \"./MovieThumb\";\nimport FontAwesome from \"react-fontawesome\";\n\nconst MovieDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  isLoading_app,\n  voteAverage,\n  withRouter\n}) => {\n  const [videoKey, setVideoKey] = useState(\"\");\n  const [movieID, setMovieID] = useState(null);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${API_KEY}&language=en-US`).then(res => res.json()).then(data => setVideoKey(data.results[0].key));\n    loadCart();\n    window.scrollTo(0, 0);\n  }, []); // if (isLoading) {\n  //   return <SpinnerPage />;\n  // }\n\n  let movieDetails = /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      // background: movie.backdrop_path\n      //   ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\n      //   : \"#000\",\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MovieThumb, {\n    image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : \"./images/no_image.jpg\",\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(MDBCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"PLOT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, movie.overview), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"IMDB RATING\"), /*#__PURE__*/React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: movie.vote_average * 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, movie.vote_average), /*#__PURE__*/React.createElement(ReactPlayer, {\n    playing: \"\",\n    controls: \"true\",\n    url: `https://www.youtube.com/watch?v=${videoKey}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `linear-gradient(to right,\n        rgba(19, 38, 47, 0.7) 0%,\n        rgba(9, 28, 37, 0.7) 100%), url(https://image.tmdb.org/t/p/w1280${movie.backdrop_path})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, movieDetails);\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  movie: state.movie.searchedMovie,\n  isLoading: state.movie.isLoading,\n  isLoading_app: state.auth.isLoading\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart\n})(MovieDetails));","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieDetails.js"],"names":["React","useEffect","useState","connect","getMovie","loadMovieDetail","getMovieVideo","addToCart","loadCart","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","loadMovieDetails","setMovie","StarRatings","ReactPlayer","PropTypes","withRouter","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","MovieThumb","FontAwesome","MovieDetails","movie","isLoading","isLoading_app","voteAverage","videoKey","setVideoKey","movieID","setMovieID","fetch","id","then","res","json","data","results","key","window","scrollTo","movieDetails","marginTop","poster_path","title","overview","vote_average","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","propTypes","match","object","isRequired","location","history","mapStateToProps","state","searchedMovie","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail, getMovieVideo } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\n// import SpinnerPage from \"../Layout/SpinnerPage\";\nimport StarRatings from \"react-star-ratings\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport {\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n} from \"../../config\";\nimport \"./MovieDetails.css\";\nimport MovieThumb from \"./MovieThumb\";\nimport FontAwesome from \"react-fontawesome\";\n\nconst MovieDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  isLoading_app,\n  voteAverage,\n  withRouter,\n}) => {\n  const [videoKey, setVideoKey] = useState(\"\");\n  const [movieID, setMovieID] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${API_KEY}&language=en-US`\n    )\n      .then((res) => res.json())\n      .then((data) => setVideoKey(data.results[0].key));\n    loadCart();\n    window.scrollTo(0, 0);\n  }, []);\n\n  // if (isLoading) {\n  //   return <SpinnerPage />;\n  // }\n\n  let movieDetails = (\n    <MDBContainer>\n      <MDBRow>\n        <div\n          style={{\n            // background: movie.backdrop_path\n            //   ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\n            //   : \"#000\",\n            marginTop: \"50px\",\n          }}\n        >\n          <MovieThumb\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            clickable={false}\n          />\n        </div>\n        <MDBCol md=\"10\">\n          <h1>{movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{movie.overview}</p>\n          <h3>IMDB RATING</h3>\n\n          <meter\n            min=\"0\"\n            max=\"100\"\n            optimum=\"100\"\n            low=\"40\"\n            high=\"70\"\n            value={movie.vote_average * 10}\n          />\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n          <ReactPlayer\n            playing=\"\"\n            controls=\"true\"\n            url={`https://www.youtube.com/watch?v=${videoKey}`}\n          />\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to right,\n        rgba(19, 38, 47, 0.7) 0%,\n        rgba(9, 28, 37, 0.7) 100%), url(https://image.tmdb.org/t/p/w1280${movie.backdrop_path})`,\n\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      {movieDetails}\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  movie: state.movie.searchedMovie,\n  isLoading: state.movie.isLoading,\n  isLoading_app: state.auth.isLoading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    addToCart,\n    loadMovieDetails,\n    getMovie,\n    loadCart,\n  })(MovieDetails)\n);\n"]},"metadata":{},"sourceType":"module"}