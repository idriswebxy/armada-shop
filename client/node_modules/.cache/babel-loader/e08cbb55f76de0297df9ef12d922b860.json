{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { setMovies, nextPage, prevPage, loadMore, loadMovies } from \"../../actions/movie\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  loadMore\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  setMovies();\n  useEffect(() => {\n    loadCart();\n  }, []); // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // }, []);\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({\n      loading: true\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${searchTerm}$page=${this.state.currentPage + 1}`;\n    }\n\n    this.fetchItems(endpoint);\n  };\n\n  let load = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n  let loadMoreBtn = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Load More\"));\n  const movieList = /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, movies.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      middle: \"true\",\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Movie, {\n      index: index,\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }));\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, isLoading ? load : movieList, \" \"), /*#__PURE__*/React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    onClick: () => loadMoreItems(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })));\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  setMovies,\n  nextPage,\n  prevPage,\n  loadMore,\n  loadMovies\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","PropTypes","SpinnerPage","LoadMoreBtn","addToCart","loadCart","setMovies","nextPage","prevPage","loadMore","loadMovies","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBBtn","useAuth0","useHistory","MovieList","isLoading","movies","loading","setLoading","searchTerm","setSearchTerm","currentPage","setCurrentPage","getAccessTokenSilently","isAuthenticated","user","history","loadMoreItems","endpoint","setState","state","fetchItems","load","loadMoreBtn","movieList","map","movie","index","id","title","poster_path","overview","release_date","propTypes","func","isRequired","mapStateToProps","userId","auth","userInfo","_id","authenticated","page","moviePage","searchedMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport {\n  setMovies,\n  nextPage,\n  prevPage,\n  loadMore,\n  loadMovies,\n} from \"../../actions/movie\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from \"../../config\";\n\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  loadMore,\n}) => {\n\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(0)\n\n\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const history = useHistory();\n\n  setMovies();\n  useEffect(() => {\n    loadCart();\n  }, []);\n\n  // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // }, []);\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({\n      loading: true,\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\n        currentPage + 1\n      }`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${\n        searchTerm\n      }$page=${this.state.currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n\n  let load = (\n    <div>\n      <SpinnerPage />\n    </div>\n  );\n\n  let loadMoreBtn = (\n    <div>\n      <MDBBtn onClick={() => loadMore()}>Load More</MDBBtn>\n    </div>\n  );\n\n  const movieList = (\n    <MDBRow>\n      {movies.map((movie, index) => {\n        return (\n          <MDBCol middle=\"true\" size=\"3\">\n            <Movie\n              index={index}\n              id={movie.id}\n              addToCart={addToCart}\n              title={movie.title}\n              image={movie.poster_path}\n              overview={movie.overview}\n              releaseDate={movie.release_date}\n              price={2.99}\n              movieObj={movie}\n            />\n          </MDBCol>\n        );\n      })}\n    </MDBRow>\n  );\n\n  return (\n    <div>\n      <MDBContainer>\n        <SearchPage />\n        <MDBContainer>{isLoading ? load : movieList} </MDBContainer>\n        <LoadMoreBtn text=\"Load More\" onClick={() => loadMoreItems()} />\n      </MDBContainer>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  setMovies,\n  nextPage,\n  prevPage,\n  loadMore,\n  loadMovies,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}