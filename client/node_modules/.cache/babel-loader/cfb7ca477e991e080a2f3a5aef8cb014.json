{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { setMovies, fetchApi, nextPage, prevPage } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBIcon, MDBAnimation, MDBBtn } from \"mdbreact\";\nimport RelatedMovies from \"./RelatedMovies\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  fetchApi,\n  page,\n  nextPage,\n  prevPage,\n  userId\n}) => {\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const history = useHistory(); // let [page, setPage] = useState(1);\n\n  let [flix, setMovies] = useState(movies);\n  let [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchApi(config.API_KEY, page);\n    loadCart();\n    history.push(`${page}`);\n  }, [page]);\n  let load = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n\n  const loadMore = page => {\n    nextPage(page + 1);\n    console.log(page);\n    let newMovies = fetchApi(config.API_KEY, page);\n    newMovies.then(m => setMovies(flix.concat(m)));\n  }; // // page transition\n  // let pages = (\n  //   <nav aria-label=\"Page navigation example\">\n  //     <ul className=\"pagination\">\n  //       <MDBBtn\n  //         onClick={() => setPage(page === 1 ? (page = 1) : page - 1)}\n  //         className=\"page-item\"\n  //       >\n  //         <MDBIcon\n  //           className=\"white-text pr-3\"\n  //           size=\"2x\"\n  //           icon=\"angle-double-left\"\n  //         />\n  //       </MDBBtn>\n  //       &nbsp; &nbsp; &nbsp; Page: {page} &nbsp; &nbsp; &nbsp; &nbsp;\n  //       <MDBBtn onClick={() => nextPage(page + 1)} className=\"page-item\">\n  //         <MDBIcon\n  //           className=\"white-text pr-3\"\n  //           size=\"2x\"\n  //           icon=\"angle-double-right\"\n  //         />\n  //       </MDBBtn>\n  //     </ul>\n  //   </nav>\n  // );\n\n\n  const movieList = /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, flix.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      middle: \"true\",\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Movie, {\n      index: index,\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }));\n  }));\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, isLoading ? load : movieList, \" \", /*#__PURE__*/React.createElement(MDBBtn, {\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }\n  }, \"Load More\")), /*#__PURE__*/React.createElement(RelatedMovies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","config","PropTypes","SpinnerPage","addToCart","loadCart","setMovies","fetchApi","nextPage","prevPage","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBView","MDBIcon","MDBAnimation","MDBBtn","RelatedMovies","useAuth0","useHistory","MovieList","isLoading","movies","page","userId","getAccessTokenSilently","isAuthenticated","user","history","flix","loading","setLoading","API_KEY","push","load","loadMore","console","log","newMovies","then","m","concat","movieList","map","movie","index","id","title","poster_path","overview","release_date","propTypes","func","isRequired","mapStateToProps","state","auth","userInfo","_id","authenticated","moviePage","searchedMovie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,QAAxC,QAAwD,qBAAxD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SACEC,YADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,YANF,EAOEC,MAPF,QAQO,UARP;AASA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBnB,EAAAA,SADiB;AAEjBC,EAAAA,QAFiB;AAGjBmB,EAAAA,SAHiB;AAIjBC,EAAAA,MAJiB;AAKjBlB,EAAAA,QALiB;AAMjBmB,EAAAA,IANiB;AAOjBlB,EAAAA,QAPiB;AAQjBC,EAAAA,QARiB;AASjBkB,EAAAA;AATiB,CAAD,KAUZ;AACJ,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA,eAA1B;AAA2CC,IAAAA;AAA3C,MAAoDT,QAAQ,EAAlE;AAEA,QAAMU,OAAO,GAAGT,UAAU,EAA1B,CAHI,CAKJ;;AACA,MAAI,CAACU,IAAD,EAAO1B,SAAP,IAAoBN,QAAQ,CAACyB,MAAD,CAAhC;AACA,MAAI,CAACQ,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACN,MAAM,CAACkC,OAAR,EAAiBT,IAAjB,CAAR;AACArB,IAAAA,QAAQ;AACR0B,IAAAA,OAAO,CAACK,IAAR,CAAc,GAAEV,IAAK,EAArB;AACD,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAMA,MAAIW,IAAI,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAMA,QAAMC,QAAQ,GAAIZ,IAAD,IAAU;AACzBlB,IAAAA,QAAQ,CAACkB,IAAI,GAAG,CAAR,CAAR;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,QAAIe,SAAS,GAAGlC,QAAQ,CAACN,MAAM,CAACkC,OAAR,EAAiBT,IAAjB,CAAxB;AACAe,IAAAA,SAAS,CAACC,IAAV,CAAgBC,CAAD,IAAOrC,SAAS,CAAC0B,IAAI,CAACY,MAAL,CAAYD,CAAZ,CAAD,CAA/B;AACD,GALD,CArBI,CA8BJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,SAAS,gBACb,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACc,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,wBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,EAAE,EAAED,KAAK,CAACE,EAFZ;AAGE,MAAA,SAAS,EAAE7C,SAHb;AAIE,MAAA,KAAK,EAAE2C,KAAK,CAACG,KAJf;AAKE,MAAA,KAAK,EAAEH,KAAK,CAACI,WALf;AAME,MAAA,QAAQ,EAAEJ,KAAK,CAACK,QANlB;AAOE,MAAA,WAAW,EAAEL,KAAK,CAACM,YAPrB;AAQE,MAAA,KAAK,EAAE,IART;AASE,MAAA,QAAQ,EAAEN,KATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAeD,GAhBA,CADH,CADF;AAsBA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,SAAS,GAAGa,IAAH,GAAUQ,SADtB,EACiC,GADjC,eAEG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMP,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFH,CAFF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAnGD;;AAqGAf,SAAS,CAAC+B,SAAV,GAAsB;AACpBlD,EAAAA,SAAS,EAAEF,SAAS,CAACqD,IAAV,CAAeC,UADN;AAEpBnD,EAAAA,QAAQ,EAAEH,SAAS,CAACqD,IAAV,CAAeC;AAFL,CAAtB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClC/B,EAAAA,MAAM,EAAE+B,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,GADM;AAElCrC,EAAAA,SAAS,EAAEkC,KAAK,CAACX,KAAN,CAAYvB,SAFW;AAGlCsC,EAAAA,aAAa,EAAEJ,KAAK,CAACC,IAAN,CAAWG,aAHQ;AAIlCrC,EAAAA,MAAM,EAAEiC,KAAK,CAACX,KAAN,CAAYtB,MAJc;AAKlCC,EAAAA,IAAI,EAAEgC,KAAK,CAACX,KAAN,CAAYgB,SALgB;AAMlCC,EAAAA,aAAa,EAAEN,KAAK,CAACX,KAAN,CAAYiB;AANO,CAAZ,CAAxB;;AASA,eAAetD,OAAO,CAAC+C,eAAD,EAAkB;AACtCrD,EAAAA,SADsC;AAEtCC,EAAAA,QAFsC;AAGtCC,EAAAA,SAHsC;AAItCC,EAAAA,QAJsC;AAKtCC,EAAAA,QALsC;AAMtCC,EAAAA;AANsC,CAAlB,CAAP,CAOZc,SAPY,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { setMovies, fetchApi, nextPage, prevPage } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn,\n} from \"mdbreact\";\nimport RelatedMovies from \"./RelatedMovies\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  fetchApi,\n  page,\n  nextPage,\n  prevPage,\n  userId,\n}) => {\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const history = useHistory();\n\n  // let [page, setPage] = useState(1);\n  let [flix, setMovies] = useState(movies);\n  let [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchApi(config.API_KEY, page);\n    loadCart();\n    history.push(`${page}`);\n  }, [page]);\n\n  let load = (\n    <div>\n      <SpinnerPage />\n    </div>\n  );\n\n  const loadMore = (page) => {\n    nextPage(page + 1)\n    console.log(page);\n    let newMovies = fetchApi(config.API_KEY, page);\n    newMovies.then((m) => setMovies(flix.concat(m)));\n  };\n\n\n\n  // // page transition\n  // let pages = (\n  //   <nav aria-label=\"Page navigation example\">\n  //     <ul className=\"pagination\">\n  //       <MDBBtn\n  //         onClick={() => setPage(page === 1 ? (page = 1) : page - 1)}\n  //         className=\"page-item\"\n  //       >\n  //         <MDBIcon\n  //           className=\"white-text pr-3\"\n  //           size=\"2x\"\n  //           icon=\"angle-double-left\"\n  //         />\n  //       </MDBBtn>\n  //       &nbsp; &nbsp; &nbsp; Page: {page} &nbsp; &nbsp; &nbsp; &nbsp;\n  //       <MDBBtn onClick={() => nextPage(page + 1)} className=\"page-item\">\n  //         <MDBIcon\n  //           className=\"white-text pr-3\"\n  //           size=\"2x\"\n  //           icon=\"angle-double-right\"\n  //         />\n  //       </MDBBtn>\n  //     </ul>\n  //   </nav>\n  // );\n\n  const movieList = (\n    <MDBRow>\n      {flix.map((movie, index) => {\n        return (\n          <MDBCol middle=\"true\" size=\"3\">\n            <Movie\n              index={index}\n              id={movie.id}\n              addToCart={addToCart}\n              title={movie.title}\n              image={movie.poster_path}\n              overview={movie.overview}\n              releaseDate={movie.release_date}\n              price={2.99}\n              movieObj={movie}\n            />\n          </MDBCol>\n        );\n      })}\n    </MDBRow>\n  );\n\n  return (\n    <MDBContainer>\n      <SearchPage />\n      <MDBContainer>\n        {isLoading ? load : movieList}{\" \"}\n        {<MDBBtn onClick={() => loadMore()}>Load More</MDBBtn>}\n      </MDBContainer>\n\n      <RelatedMovies />\n    </MDBContainer>\n  );\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}