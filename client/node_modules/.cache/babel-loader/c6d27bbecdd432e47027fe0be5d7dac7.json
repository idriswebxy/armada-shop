{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport MainImage from \"../MainImage/MainImage\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { fetchItems, nextPage, prevPage // loadMore,\n, loadMovies } from \"../../actions/movie\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  // movies,\n  loadMore,\n  fetchItems\n}) => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [mainImage, setMainImage] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  useEffect(() => {\n    setLoading(true);\n    let endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchItems(endpoint);\n    loadCart();\n  }, []); // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // }, []);\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading({\n      loading: true\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${searchTerm}$page=${currentPage + 1}`;\n    }\n\n    fetchItems(endpoint);\n  };\n\n  const searchItems = searchTerm => {\n    console.log(searchTerm);\n    let endpoint = \"\";\n    setMovies([]);\n    setLoading(true);\n    setSearchTerm(searchTerm);\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n\n    this.fetchItems(endpoint);\n  };\n\n  let load = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n  let loadMoreBtn = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Load More\")); // const movieList = (\n  //   <MDBRow>\n  //     {movies.map((movie, index) => {\n  //       return (\n  //         <MDBCol middle=\"true\" size=\"3\">\n  //           <Movie\n  //             index={index}\n  //             id={movie.id}\n  //             addToCart={addToCart}\n  //             title={movie.title}\n  //             image={movie.poster_path}\n  //             overview={movie.overview}\n  //             releaseDate={movie.release_date}\n  //             price={2.99}\n  //             movieObj={movie}\n  //           />\n  //         </MDBCol>\n  //       );\n  //     })}\n  //   </MDBRow>\n  // );\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, mainImage ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainImage, {\n    image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${mainImage.backdrop_path}`,\n    title: mainImage.original_title,\n    text: mainImage.overview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchPage, {\n    callback: () => searchItems(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FourColGrid, {\n    header: searchTerm ? \"Search Result\" : \"Popular Movies\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, movies.map((element, i) => {\n    return /*#__PURE__*/React.createElement(MovieThumb, {\n      key: i,\n      clickable: true,\n      image: element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}` : \"./images/no_image.jpg\",\n      movieId: element.id,\n      movieName: element.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    });\n  })), loading ? /*#__PURE__*/React.createElement(SpinnerPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 20\n    }\n  }) : null, currentPage <= totalPages && !loading ? /*#__PURE__*/React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    onClick: () => loadMoreItems(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }) : null));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  // movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  fetchItems\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","PropTypes","SpinnerPage","LoadMoreBtn","MainImage","FourColGrid","MovieThumb","addToCart","loadCart","fetchItems","nextPage","prevPage","loadMovies","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBBtn","useAuth0","useHistory","MovieList","isLoading","loadMore","movies","setMovies","loading","setLoading","searchTerm","setSearchTerm","currentPage","setCurrentPage","mainImage","setMainImage","totalPages","setTotalPages","getAccessTokenSilently","isAuthenticated","user","history","endpoint","loadMoreItems","searchItems","console","log","load","loadMoreBtn","backdrop_path","original_title","overview","map","element","i","poster_path","id","mapStateToProps","state","userId","auth","userInfo","_id","movie","authenticated","page","moviePage","searchedMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport MainImage from \"../MainImage/MainImage\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport {\n  fetchItems,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n} from \"../../actions/movie\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from \"../../config\";\n\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  // movies,\n  loadMore,\n  fetchItems,\n}) => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [mainImage, setMainImage] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoading(true);\n    let endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchItems(endpoint);\n    loadCart();\n  }, []);\n\n  // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // }, []);\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading({\n      loading: true,\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\n        currentPage + 1\n      }`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${searchTerm}$page=${\n        currentPage + 1\n      }`;\n    }\n    fetchItems(endpoint);\n  };\n\n  const searchItems = (searchTerm) => {\n    console.log(searchTerm);\n    let endpoint = \"\";\n\n    setMovies([]);\n    setLoading(true);\n    setSearchTerm(searchTerm);\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  let load = (\n    <div>\n      <SpinnerPage />\n    </div>\n  );\n\n  let loadMoreBtn = (\n    <div>\n      <MDBBtn onClick={() => loadMore()}>Load More</MDBBtn>\n    </div>\n  );\n\n  // const movieList = (\n  //   <MDBRow>\n  //     {movies.map((movie, index) => {\n  //       return (\n  //         <MDBCol middle=\"true\" size=\"3\">\n  //           <Movie\n  //             index={index}\n  //             id={movie.id}\n  //             addToCart={addToCart}\n  //             title={movie.title}\n  //             image={movie.poster_path}\n  //             overview={movie.overview}\n  //             releaseDate={movie.release_date}\n  //             price={2.99}\n  //             movieObj={movie}\n  //           />\n  //         </MDBCol>\n  //       );\n  //     })}\n  //   </MDBRow>\n  // );\n\n  return (\n    <div className=\"rmdb-home\">\n      {mainImage ? (\n        <div>\n          <MainImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${mainImage.backdrop_path}`}\n            title={mainImage.original_title}\n            text={mainImage.overview}\n          />\n          <SearchPage callback={() => searchItems()} />\n        </div>\n      ) : null}\n      <div className=\"rmdb-home-grid\">\n        <FourColGrid\n          header={searchTerm ? \"Search Result\" : \"Popular Movies\"}\n          loading={loading}\n        >\n          {movies.map((element, i) => {\n            return (\n              <MovieThumb\n                key={i}\n                clickable={true}\n                image={\n                  element.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}`\n                    : \"./images/no_image.jpg\"\n                }\n                movieId={element.id}\n                movieName={element.original_title}\n              />\n            );\n          })}\n        </FourColGrid>\n        {loading ? <SpinnerPage /> : null}\n        {currentPage <= totalPages && !loading ? (\n          <LoadMoreBtn text=\"Load More\" onClick={() => loadMoreItems()} />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  // movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  fetchItems,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}