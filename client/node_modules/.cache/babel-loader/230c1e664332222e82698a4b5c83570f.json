{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShows.js\";\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport { setTvShowsReducer } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport SearchPage from \"../Search/Search\";\nimport Show from \"./Show\";\nimport RelatedMovies from \"../Movies/RelatedMovies\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBAnimation } from \"mdbreact\";\n\nconst TvShows = ({\n  setTvShowsReducer,\n  loadCart,\n  isLoading,\n  getRelatedMovies,\n  tvShows\n}) => {\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${config.API_KEY}&language=en-US&page=1`).then(res => res.json()).then(data => {\n      setTvShowsReducer(data.results);\n      loadCart();\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(SpinnerPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let shows = /*#__PURE__*/React.createElement(MDBAnimation, {\n    type: \"zoomIn\",\n    duration: \"1s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, tvShows.map((tvShow, key) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      key: key,\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hover-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Show, {\n      id: tvShow.id,\n      title: tvShow.name,\n      image: tvShow.poster_path,\n      overview: tvShow.overview,\n      tvShowObj: tvShow,\n      price: 2.99,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    })));\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, shows), /*#__PURE__*/React.createElement(RelatedMovies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  tvShows: state.movie.tvShows\n});\n\nexport default connect(mapStateToProps, {\n  setTvShowsReducer,\n  loadCart\n})(TvShows);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShows.js"],"names":["React","useEffect","useState","config","setTvShowsReducer","connect","SpinnerPage","addToCart","loadCart","getCart","SearchPage","Show","RelatedMovies","MDBContainer","MDBRow","MDBCol","MDBView","MDBAnimation","TvShows","isLoading","getRelatedMovies","tvShows","fetch","API_KEY","then","res","json","data","results","shows","map","tvShow","key","id","name","poster_path","overview","mapStateToProps","state","userId","auth","userInfo","_id","movie","authenticated"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport { setTvShowsReducer } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport SearchPage from \"../Search/Search\";\nimport Show from \"./Show\";\nimport RelatedMovies from \"../Movies/RelatedMovies\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBAnimation } from \"mdbreact\";\n\nconst TvShows = ({\n  setTvShowsReducer,\n  loadCart,\n  isLoading,\n  getRelatedMovies,\n  tvShows,\n}) => {\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/tv?api_key=${config.API_KEY}&language=en-US&page=1`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setTvShowsReducer(data.results);\n        loadCart();\n      });\n  }, []);\n\n  if (isLoading) {\n    return <SpinnerPage />;\n  }\n\n  let shows = (\n    <MDBAnimation type=\"zoomIn\" duration=\"1s\">\n      <MDBRow>\n        {tvShows.map((tvShow, key) => {\n          return (\n            <MDBCol key={key} size=\"3\">\n              <div className=\"hover-movie\">\n                <Show\n                  id={tvShow.id}\n                  title={tvShow.name}\n                  image={tvShow.poster_path}\n                  overview={tvShow.overview}\n                  tvShowObj={tvShow}\n                  price={2.99}\n                />\n              </div>\n            </MDBCol>\n          );\n        })}\n      </MDBRow>\n    </MDBAnimation>\n  );\n\n  return (\n    <div>\n      <SearchPage />\n      <MDBContainer>{shows}</MDBContainer>\n      <RelatedMovies />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  tvShows: state.movie.tvShows,\n});\n\nexport default connect(mapStateToProps, {\n  setTvShowsReducer,\n  loadCart,\n})(TvShows);\n"]},"metadata":{},"sourceType":"module"}