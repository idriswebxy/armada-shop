{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { setMovies, fetchApi, nextPage, prevPage, loadMore } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBIcon, MDBAnimation, MDBBtn } from \"mdbreact\";\nimport RelatedMovies from \"./RelatedMovies\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  fetchApi,\n  page,\n  nextPage,\n  prevPage,\n  userId,\n  loadMore\n}) => {\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  useEffect(() => {\n    fetchApi(config.API_KEY);\n    loadCart(); // history.push(`${page}`);\n  }, []);\n  let load = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n  const movieList = /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, movies.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      middle: \"true\",\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Movie, {\n      index: index,\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }));\n  }));\n  window.addEventListener(\"scroll\", event => {\n    let scroll = this.scrollY;\n    console.log(scroll);\n  });\n\n  window.onscroll = function (ev) {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      loadMore(movies, config.API_KEY, page);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, isLoading ? load : movieList, \" \"), /*#__PURE__*/React.createElement(RelatedMovies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage,\n  loadMore\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","config","PropTypes","SpinnerPage","addToCart","loadCart","setMovies","fetchApi","nextPage","prevPage","loadMore","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBView","MDBIcon","MDBAnimation","MDBBtn","RelatedMovies","useAuth0","useHistory","MovieList","isLoading","movies","page","userId","getAccessTokenSilently","isAuthenticated","user","history","API_KEY","load","movieList","map","movie","index","id","title","poster_path","overview","release_date","window","addEventListener","event","scroll","scrollY","console","log","onscroll","ev","innerHeight","document","body","offsetHeight","propTypes","func","isRequired","mapStateToProps","state","auth","userInfo","_id","authenticated","moviePage","searchedMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport {\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage,\n  loadMore,\n} from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn,\n} from \"mdbreact\";\nimport RelatedMovies from \"./RelatedMovies\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  fetchApi,\n  page,\n  nextPage,\n  prevPage,\n  userId,\n  loadMore,\n}) => {\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchApi(config.API_KEY);\n    loadCart();\n    // history.push(`${page}`);\n  }, []);\n\n  let load = (\n    <div>\n      <SpinnerPage />\n    </div>\n  );\n\n\n\n  const movieList = (\n    <MDBRow>\n      {movies.map((movie, index) => {\n        return (\n          <MDBCol middle=\"true\" size=\"3\">\n            <Movie\n              index={index}\n              id={movie.id}\n              addToCart={addToCart}\n              title={movie.title}\n              image={movie.poster_path}\n              overview={movie.overview}\n              releaseDate={movie.release_date}\n              price={2.99}\n              movieObj={movie}\n            />\n          </MDBCol>\n        );\n      })}\n    </MDBRow>\n  );\n\n  window.addEventListener(\"scroll\", (event) => {\n    let scroll = this.scrollY;\n    console.log(scroll)\n});\n  window.onscroll = function (ev) {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      loadMore(movies, config.API_KEY, page);\n    }\n  };\n\n  return (\n    <MDBContainer>\n      <SearchPage />\n      <MDBContainer>\n        {isLoading ? load : movieList}{\" \"}\n      </MDBContainer>\n\n      <RelatedMovies />\n    </MDBContainer>\n  );\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage,\n  loadMore,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}