{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Routing/PrivateRoute.js\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  path,\n  auth: {\n    authenticated\n  }\n}, ...rest) => {\n  const {\n    loading,\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0(); // useEffect(() => {\n  //   if (loading || isAuthenticated) {\n  //     return;\n  //   }\n  //   const fn = async () => {\n  //     await loginWithRedirect({\n  //       appState: { targetUrl: path },\n  //     });\n  //   };\n  //   fn();\n  // }, [loading, isAuthenticated, loginWithRedirect, path, authenticated]);\n\n  useEffect(() => {\n    console.log(props);\n  }, []);\n\n  const render = props => isAuthenticated === true || authenticated == true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })) : null;\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({\n    path: path,\n    render: render\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Routing/PrivateRoute.js"],"names":["React","useEffect","Route","useAuth0","connect","PrivateRoute","component","Component","path","auth","authenticated","rest","loading","isAuthenticated","loginWithRedirect","console","log","props","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAApC,CADmB,EAEnB,GAAGC,IAFgB,KAGhB;AACH,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAkDX,QAAQ,EAAhE,CADG,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,MAAM,GAAID,KAAD,IACbJ,eAAe,KAAK,IAApB,IAA4BH,aAAa,IAAI,IAA7C,gBACE,oBAAC,SAAD,oBAAeO,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,GAEI,IAHN;;AAKA,sBAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,MAAM,EAAEU;AAA3B,KAAuCP,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA5BD;;AA8BA,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACe,eAAD,CAAP,CAAyBd,YAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { connect } from \"react-redux\";\n\n\n\nconst PrivateRoute = (\n  { component: Component, path, auth: { authenticated } },\n  ...rest\n) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  // useEffect(() => {\n  //   if (loading || isAuthenticated) {\n  //     return;\n  //   }\n  //   const fn = async () => {\n  //     await loginWithRedirect({\n  //       appState: { targetUrl: path },\n  //     });\n  //   };\n  //   fn();\n  // }, [loading, isAuthenticated, loginWithRedirect, path, authenticated]);\n\n  useEffect(() => {\n    console.log(props)\n  }, [])\n\n  const render = (props) =>\n    isAuthenticated === true || authenticated == true ? (\n      <Component {...props} />\n    ) : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}