{"ast":null,"code":"import { GET_MOVIE, GET_MOVIE_ERR, SET_MOVIES, SET_MOVIE_ERR, SET_SEARCHED_MOVIE, GET_SEARCHED_MOVIE, LOAD_MOVIE_DETAILS, SET_TVSHOWS_ERR, SET_TVSHOWS, GET_SHOW, GET_SHOW_ERR, SET_RELATED_MOVIES, NEXT_PAGE, PREV_PAGE, GET_RELATED_MOVIE_ID, LOAD_MORE, LOAD_MOVIES, LOAD_CHANGE } from \"../actions/types\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { API_URL, API_KEY } from \"../config.js\"; // let movieStore = store.store.getState().movie;\n// let apiKey = config.API_KEY;\n\nexport const setSearchedMovies = movie => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCHED_MOVIE,\n      payload: movie\n    });\n  } catch (e) {\n    return;\n  }\n};\nexport const getRelatedMovie = id => async dispatch => {\n  dispatch({\n    type: GET_RELATED_MOVIE_ID,\n    payload: id\n  });\n};\nexport const loadMovies = () => async dispatch => {\n  dispatch({\n    type: LOAD_MOVIES\n  });\n};\nexport const getSearchedMovie = id => async dispatch => {\n  dispatch({\n    type: GET_SEARCHED_MOVIE,\n    payload: id\n  });\n};\nexport const getMovie = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_MOVIE,\n      payload: id\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_MOVIE_ERR\n    });\n  }\n};\nexport const loadChange = loadStatus => async dispatch => {\n  dispatch({\n    type: LOAD_CHANGE,\n    payload: loadStatus\n  });\n};\nexport const loadMoreItems = endpoint => async dispatch => {\n  dispatch(fetchItems(endpoint));\n  dispatch({\n    type: LOAD_MOVIES\n  });\n};\nexport const fetchItems = endpoint => async dispatch => {\n  let res = await fetch(endpoint);\n  let data = await res.json();\n\n  try {\n    // set total_pages\n    dispatch({\n      type: SET_MOVIES,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: SET_MOVIE_ERR,\n      payload: e\n    });\n  }\n};\nexport const setTvShowsReducer = tvShows => async dispatch => {\n  try {\n    dispatch({\n      type: SET_TVSHOWS,\n      payload: tvShows\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_TVSHOWS_ERR,\n      payload: err\n    });\n  }\n};\nexport const getShow = id => async dispatch => {\n  dispatch({\n    type: GET_SHOW,\n    payload: id\n  });\n\n  try {} catch (e) {\n    dispatch({\n      type: GET_SHOW_ERR\n    });\n  }\n};\nexport const loadMovieDetails = () => async dispatch => {\n  dispatch({\n    type: LOAD_MOVIE_DETAILS\n  });\n};\nexport const setRelatedMovies = () => async dispatch => {\n  try {\n    const resId = await axios.get(\"/api/movie/genre_id\");\n    await fetch(`https://api.themoviedb.org/3/movie/${resId.data}/similar?api_key=${API_KEY}&language=en-US&page=1`).then(res => res.json()).then(data => {\n      let shuffled = data.results.sort(() => 0.5 - Math.random());\n      let selected = shuffled.slice(0, 5);\n      dispatch({\n        type: SET_RELATED_MOVIES,\n        payload: selected\n      });\n    });\n  } catch (error) {\n    console.error(error.response);\n  }\n};\nexport const nextPage = page => async dispatch => {\n  dispatch({\n    type: NEXT_PAGE,\n    payload: page\n  });\n};\nexport const prevPage = page => async dispatch => {\n  page = page === 1 ? page = 2 : page;\n  dispatch({\n    type: PREV_PAGE,\n    payload: page\n  });\n};","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/actions/movie.js"],"names":["GET_MOVIE","GET_MOVIE_ERR","SET_MOVIES","SET_MOVIE_ERR","SET_SEARCHED_MOVIE","GET_SEARCHED_MOVIE","LOAD_MOVIE_DETAILS","SET_TVSHOWS_ERR","SET_TVSHOWS","GET_SHOW","GET_SHOW_ERR","SET_RELATED_MOVIES","NEXT_PAGE","PREV_PAGE","GET_RELATED_MOVIE_ID","LOAD_MORE","LOAD_MOVIES","LOAD_CHANGE","axios","store","API_URL","API_KEY","setSearchedMovies","movie","dispatch","type","payload","e","getRelatedMovie","id","loadMovies","getSearchedMovie","getMovie","loadChange","loadStatus","loadMoreItems","endpoint","fetchItems","res","fetch","data","json","setTvShowsReducer","tvShows","err","getShow","loadMovieDetails","setRelatedMovies","resId","get","then","shuffled","results","sort","Math","random","selected","slice","error","console","response","nextPage","page","prevPage"],"mappings":"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","sourcesContent":["import {\n  GET_MOVIE,\n  GET_MOVIE_ERR,\n  SET_MOVIES,\n  SET_MOVIE_ERR,\n  SET_SEARCHED_MOVIE,\n  GET_SEARCHED_MOVIE,\n  LOAD_MOVIE_DETAILS,\n  SET_TVSHOWS_ERR,\n  SET_TVSHOWS,\n  GET_SHOW,\n  GET_SHOW_ERR,\n  SET_RELATED_MOVIES,\n  NEXT_PAGE,\n  PREV_PAGE,\n  GET_RELATED_MOVIE_ID,\n  LOAD_MORE,\n  LOAD_MOVIES,\n  LOAD_CHANGE,\n} from \"../actions/types\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { API_URL, API_KEY } from \"../config.js\";\n\n// let movieStore = store.store.getState().movie;\n\n// let apiKey = config.API_KEY;\n\nexport const setSearchedMovies = (movie) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_SEARCHED_MOVIE,\n      payload: movie,\n    });\n  } catch (e) {\n    return;\n  }\n};\n\nexport const getRelatedMovie = (id) => async (dispatch) => {\n  dispatch({\n    type: GET_RELATED_MOVIE_ID,\n    payload: id,\n  });\n};\n\nexport const loadMovies = () => async (dispatch) => {\n  dispatch({\n    type: LOAD_MOVIES,\n  });\n};\n\nexport const getSearchedMovie = (id) => async (dispatch) => {\n  dispatch({\n    type: GET_SEARCHED_MOVIE,\n    payload: id,\n  });\n};\n\nexport const getMovie = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_MOVIE,\n      payload: id,\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_MOVIE_ERR,\n    });\n  }\n};\n\nexport const loadChange = (loadStatus) => async (dispatch) => {\n  dispatch({\n    type: LOAD_CHANGE,\n    payload: loadStatus,\n  });\n};\n\nexport const loadMoreItems = (endpoint) => async (dispatch) => {\n\n  dispatch(fetchItems(endpoint))\n\n  dispatch({\n    type: LOAD_MOVIES\n  })\n\n}\n\nexport const fetchItems = (endpoint) => async (dispatch) => {\n  let res = await fetch(endpoint);\n  let data = await res.json();\n\n  try {\n    // set total_pages\n    dispatch({\n      type: SET_MOVIES,\n      payload: data,\n    });\n  } catch (e) {\n    dispatch({\n      type: SET_MOVIE_ERR,\n      payload: e,\n    });\n  }\n};\n\nexport const setTvShowsReducer = (tvShows) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_TVSHOWS,\n      payload: tvShows,\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_TVSHOWS_ERR,\n      payload: err,\n    });\n  }\n};\n\nexport const getShow = (id) => async (dispatch) => {\n  dispatch({\n    type: GET_SHOW,\n    payload: id,\n  });\n  try {\n  } catch (e) {\n    dispatch({\n      type: GET_SHOW_ERR,\n    });\n  }\n};\n\nexport const loadMovieDetails = () => async (dispatch) => {\n  dispatch({\n    type: LOAD_MOVIE_DETAILS,\n  });\n};\n\nexport const setRelatedMovies = () => async (dispatch) => {\n  try {\n    const resId = await axios.get(\"/api/movie/genre_id\");\n\n    await fetch(\n      `https://api.themoviedb.org/3/movie/${resId.data}/similar?api_key=${API_KEY}&language=en-US&page=1`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        let shuffled = data.results.sort(() => 0.5 - Math.random());\n\n        let selected = shuffled.slice(0, 5);\n\n        dispatch({\n          type: SET_RELATED_MOVIES,\n          payload: selected,\n        });\n      });\n  } catch (error) {\n    console.error(error.response);\n  }\n};\n\nexport const nextPage = (page) => async (dispatch) => {\n  dispatch({\n    type: NEXT_PAGE,\n    payload: page,\n  });\n};\n\nexport const prevPage = (page) => async (dispatch) => {\n  page = page === 1 ? (page = 2) : page;\n  dispatch({\n    type: PREV_PAGE,\n    payload: page,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}