{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Auth/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { NavLink, NavItem, Button } from \"react-bootstrap\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBNavLink } from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Login = ({\n  login,\n  authenticated,\n  loading,\n  getCurrentProfile\n}) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    user,\n    isAuthenticated,\n    loginWithRedirect,\n    logout\n  } = useAuth0();\n  const {\n    email,\n    password\n  } = formData;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (authenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(SpinnerPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    style: {\n      marginTop: \"80px\"\n    },\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grey-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBInput, {\n    label: \"Type your email\",\n    icon: \"envelope\",\n    group: true,\n    type: \"email\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    name: \"email\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MDBInput, {\n    label: \"Type your password\",\n    icon: \"lock\",\n    group: true,\n    type: \"password\",\n    validate: true,\n    name: \"password\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Login\")), !isAuthenticated ? /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"qsLoginBtn\",\n    color: \"primary\",\n    className: \"btn-margin\",\n    onClick: () => loginWithRedirect(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \"Sign in Google\")) : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => logout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Logout\"))))));\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated,\n  page: state.movie.page,\n  loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Auth/Login.js"],"names":["React","useState","Link","Redirect","NavLink","RouterNavLink","NavItem","Button","SpinnerPage","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBNavLink","connect","login","PropTypes","useAuth0","Login","authenticated","loading","getCurrentProfile","formData","setFormData","email","password","user","isAuthenticated","loginWithRedirect","logout","isOpen","setIsOpen","toggle","onChange","e","target","name","value","onSubmit","preventDefault","marginTop","propTypes","func","isRequired","bool","mapStateToProps","state","auth","page","movie"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { NavLink, NavItem, Button } from \"react-bootstrap\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBNavLink,\n} from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\nconst Login = ({ login, authenticated, loading, getCurrentProfile }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const {\n    user,\n    isAuthenticated,\n    loginWithRedirect,\n    logout\n  } = useAuth0();\n\n  const { email, password } = formData;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (authenticated) {\n    return <Redirect to={\"/movies\"} />;\n  }\n\n  if (loading) {\n    return <SpinnerPage />;\n  }\n\n  return (\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol style={{ marginTop: \"80px\" }} md=\"6\">\n          <form onSubmit={(e) => onSubmit(e)}>\n            <h4>Sign in</h4>\n            <div className=\"grey-text\">\n              <MDBInput\n                label=\"Type your email\"\n                icon=\"envelope\"\n                group\n                type=\"email\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                name=\"email\"\n                onChange={(e) => onChange(e)}\n              />\n              <MDBInput\n                label=\"Type your password\"\n                icon=\"lock\"\n                group\n                type=\"password\"\n                validate\n                name=\"password\"\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <MDBRow>\n              <MDBCol>\n                <MDBBtn type=\"submit\">Login</MDBBtn>\n              </MDBCol>\n\n              {!isAuthenticated ? (\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={() => loginWithRedirect()}\n                  >\n                    Sign in Google\n                  </Button>\n                </NavItem>\n              ) : (\n                <Button onClick={() => logout()}>Logout</Button>\n              )}\n            </MDBRow>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n  page: state.movie.page,\n  loading: state.auth.loading,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}