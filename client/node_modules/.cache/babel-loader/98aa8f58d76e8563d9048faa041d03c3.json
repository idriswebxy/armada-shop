{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShowDetails.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\nimport Spinner from \"../Spinner/Spinner\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../../config\";\nimport Show from \"./Show\";\n\nconst TvShowDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  tvShow\n}) => {\n  useEffect(() => {\n    loadCart();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let tvShowDetails = /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-details-container\",\n    style: {\n      // background: tvShow.backdrop_path\n      //   ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${tvShow.backdrop_path}')`\n      //   : \"#000\",\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Show // image={\n  //   tvShow.poster_path\n  //     ? `${IMAGE_BASE_URL}${POSTER_SIZE}${tvShow.poster_path}`\n  //     : \"./images/no_image.jpg\"\n  // }\n  // clickable={false}\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, tvShow.title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"PLOT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, tvShow.overview), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"IMDB RATING\"), /*#__PURE__*/React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: tvShow.vote_average * 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, tvShow.vote_average))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `linear-gradient(to right,\n    rgba(19, 38, 47, 0.925) 0%,\n    rgba(9, 28, 37, 0.925) 100%), url(https://image.tmdb.org/t/p/w1280${tvShow.backdrop_path})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, tvShowDetails);\n};\n\nconst mapStateToProps = state => ({\n  tvShow: state.movie.searchedShow,\n  isLoading: state.movie.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart\n})(TvShowDetails);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShowDetails.js"],"names":["React","useEffect","useState","connect","getMovie","loadMovieDetail","addToCart","loadCart","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","loadMovieDetails","setMovie","Spinner","MovieThumb","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","Show","TvShowDetails","movie","isLoading","tvShow","tvShowDetails","marginTop","title","overview","vote_average","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","mapStateToProps","state","searchedShow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\nimport Spinner from \"../Spinner/Spinner\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport {\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n} from \"../../config\";\nimport Show from \"./Show\";\n\nconst TvShowDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  tvShow,\n}) => {\n  useEffect(() => {\n    loadCart();\n  }, []);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  let tvShowDetails = (\n    <MDBContainer>\n      <MDBRow>\n        <div\n          className=\"movie-details-container\"\n          style={{\n            // background: tvShow.backdrop_path\n            //   ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${tvShow.backdrop_path}')`\n            //   : \"#000\",\n            marginTop: \"50px\",\n          }}\n        >\n          <Show\n            // image={\n            //   tvShow.poster_path\n            //     ? `${IMAGE_BASE_URL}${POSTER_SIZE}${tvShow.poster_path}`\n            //     : \"./images/no_image.jpg\"\n            // }\n            // clickable={false}\n          />\n        </div>\n        <MDBCol>\n          <h1>{tvShow.title}</h1>\n          <h3>PLOT</h3>\n          <p>{tvShow.overview}</p>\n          <h3>IMDB RATING</h3>\n\n          <meter\n            min=\"0\"\n            max=\"100\"\n            optimum=\"100\"\n            low=\"40\"\n            high=\"70\"\n            value={tvShow.vote_average * 10}\n          />\n          <p className=\"rmdb-score\">{tvShow.vote_average}</p>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to right,\n    rgba(19, 38, 47, 0.925) 0%,\n    rgba(9, 28, 37, 0.925) 100%), url(https://image.tmdb.org/t/p/w1280${tvShow.backdrop_path})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      {tvShowDetails}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tvShow: state.movie.searchedShow,\n  isLoading: state.movie.isLoading,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n})(TvShowDetails);\n"]},"metadata":{},"sourceType":"module"}