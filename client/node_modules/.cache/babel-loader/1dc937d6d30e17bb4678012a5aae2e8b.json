{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport { getMovie, setMovies, clearCache, getMovieVideo, fetchApi, nextPage, prevPage, setRelatedMovies, setMoviesDB } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBIcon, MDBAnimation, MDBNavLink } from \"mdbreact\";\nimport RelatedMovies from \"./RelatedMovies\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport { useParams, useHistory, useRouteMatch, Link } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  fetchApi,\n  page,\n  nextPage,\n  prevPage,\n  dispatch,\n  getCurrentProfile,\n  userId\n}) => {\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch(); // const [pages, changeForward] = useState();\n  // const [pages, changeBack] = useState();\n\n  useEffect(() => {\n    fetchApi(config.API_KEY, match.params.page);\n    loadCart(); // getAccessTokenSilently().then(token => localStorage.setItem(\"token\", token))\n\n    getCurrentProfile(userId);\n    console.log(history, match);\n    history.location.state = page;\n  }, [match.params.page]);\n  let load = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })); // page transition\n\n  let pages = /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"Page navigation example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => prevPage(page),\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    className: \"white-text pr-3\",\n    size: \"2x\",\n    icon: \"angle-double-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), \"\\xA0 \\xA0 \\xA0 Page: \", page, \" \\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => nextPage(page),\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    className: \"white-text pr-3\",\n    size: \"2x\",\n    icon: \"angle-double-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))));\n  const movieList = /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, movies.map((movie, key) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      size: \"6\",\n      lg: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBAnimation, {\n      type: \"zoomIn\",\n      duration: \"1s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Movie, {\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })));\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, pages), isLoading ? load : movieList, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, pages)), /*#__PURE__*/React.createElement(RelatedMovies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userId: state.profile.profile,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.page,\n  searchedMovie: state.movie.searchedMovie\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  getCart,\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage,\n  getCurrentProfile\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","Component","useEffect","useState","config","PropTypes","SpinnerPage","addToCart","loadCart","getCart","getMovie","setMovies","clearCache","getMovieVideo","fetchApi","nextPage","prevPage","setRelatedMovies","setMoviesDB","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBView","MDBIcon","MDBAnimation","MDBNavLink","RelatedMovies","useAuth0","getCurrentProfile","useParams","useHistory","useRouteMatch","Link","MovieList","isLoading","movies","page","dispatch","userId","getAccessTokenSilently","isAuthenticated","user","params","history","match","API_KEY","console","log","location","state","load","pages","movieList","map","movie","key","id","title","poster_path","overview","release_date","propTypes","func","isRequired","mapStateToProps","profile","authenticated","auth","searchedMovie"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport PropTypes from \"prop-types\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport {\n  getMovie,\n  setMovies,\n  clearCache,\n  getMovieVideo,\n  fetchApi,\n  nextPage,\n  prevPage,\n  setRelatedMovies,\n  setMoviesDB,\n} from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBIcon,\n  MDBAnimation,\n  MDBNavLink,\n} from \"mdbreact\";\nimport RelatedMovies from \"./RelatedMovies\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport { useParams, useHistory, useRouteMatch, Link } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  fetchApi,\n  page,\n  nextPage,\n  prevPage,\n  dispatch,\n  getCurrentProfile,\n  userId,\n}) => {\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const params = useParams();\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  // const [pages, changeForward] = useState();\n  // const [pages, changeBack] = useState();\n\n  useEffect(() => {\n    fetchApi(config.API_KEY, match.params.page);\n    loadCart();\n    // getAccessTokenSilently().then(token => localStorage.setItem(\"token\", token))\n    getCurrentProfile(userId);\n\n    console.log(history, match);\n    history.location.state = page;\n  }, [match.params.page]);\n\n  let load = (\n    <div>\n      <SpinnerPage />\n    </div>\n  );\n\n  // page transition\n  let pages = (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        <li onClick={() => prevPage(page)} className=\"page-item\">\n          <MDBIcon\n            className=\"white-text pr-3\"\n            size=\"2x\"\n            icon=\"angle-double-left\"\n          />\n        </li>\n        &nbsp; &nbsp; &nbsp; Page: {page} &nbsp; &nbsp; &nbsp; &nbsp;\n        <li onClick={() => nextPage(page)} className=\"page-item\">\n          <MDBIcon\n            className=\"white-text pr-3\"\n            size=\"2x\"\n            icon=\"angle-double-right\"\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n\n  const movieList = (\n    <MDBRow>\n      {movies.map((movie, key) => {\n        return (\n          <MDBCol size=\"6\" lg=\"3\">\n            <MDBAnimation type=\"zoomIn\" duration=\"1s\">\n              <Movie\n                id={movie.id}\n                addToCart={addToCart}\n                title={movie.title}\n                image={movie.poster_path}\n                overview={movie.overview}\n                releaseDate={movie.release_date}\n                price={2.99}\n                movieObj={movie}\n              />\n            </MDBAnimation>\n          </MDBCol>\n        );\n      })}\n    </MDBRow>\n  );\n\n  return (\n    <div className=\"movie-list\">\n      <MDBContainer>\n        <SearchPage />\n        <div className=\"pagination\">{pages}</div>\n        {isLoading ? load : movieList}\n        <div className=\"pagination\">{pages}</div>\n      </MDBContainer>\n      <RelatedMovies />\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  loadCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.profile.profile,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.page,\n  searchedMovie: state.movie.searchedMovie,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  getCart,\n  setMovies,\n  fetchApi,\n  nextPage,\n  prevPage,\n  getCurrentProfile,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}