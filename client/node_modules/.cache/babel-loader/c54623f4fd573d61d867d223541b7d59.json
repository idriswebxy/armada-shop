{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Auth/Register.js\";\nimport React, { useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register, setProfile } from \"../../actions/auth\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBNavLink } from \"mdbreact\";\nimport axios from \"axios\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { Button } from \"reactstrap\";\n\nconst Register = ({\n  setAlert,\n  register,\n  authenticated\n}) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords do not match!\", \"danger\");\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (authenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    style: {\n      marginTop: \"80px\"\n    },\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBInput, {\n    label: \"Your name\",\n    icon: \"user\",\n    group: true,\n    name: \"name\",\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    value: name,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MDBInput, {\n    label: \"Your email\",\n    icon: \"envelope\",\n    group: true,\n    name: \"email\",\n    type: \"email\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    value: email,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MDBInput, {\n    label: \"Your password\",\n    icon: \"lock\",\n    group: true,\n    name: \"password\",\n    type: \"password\",\n    validate: true,\n    success: \"right\",\n    value: password,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MDBInput, {\n    label: \"Confirm your password\",\n    icon: \"lock\",\n    group: true,\n    name: \"password2\",\n    type: \"password\",\n    validate: true,\n    error: \"wrong\",\n    value: password2,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.auth.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Auth/Register.js"],"names":["React","useState","GoogleLogin","PropTypes","Link","Redirect","connect","setAuthToken","setAlert","register","setProfile","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBNavLink","axios","useGoogleLogin","Button","Register","authenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","marginTop","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,SACEC,YADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,UANF,QAOO,UAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEZ,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBY,EAAAA;AAAtB,CAAD,KAA2C;AAC1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC;AACvCuB,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAD,CAAxC;;AAOA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBN,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACO,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAAzC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAM;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAuCL,QAA7C;;AAGA,QAAMU,QAAQ,GAAG,MAAOH,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BnB,MAAAA,QAAQ,CAAC,yBAAD,EAA4B,QAA5B,CAAR;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAD,CAAR;AACD;AACF,GAPD;;AASA,MAAIL,aAAJ,EAAmB;AACjB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAAf;AAAsC,IAAA,EAAE,EAAC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAGL,CAAD,IAAOG,QAAQ,CAACH,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,OAAO,EAAC,OARV;AASE,IAAA,KAAK,EAAEL,IATT;AAUE,IAAA,QAAQ,EAAGK,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,OAAO,EAAC,OARV;AASE,IAAA,KAAK,EAAEJ,KATT;AAUE,IAAA,QAAQ,EAAGI,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAyBE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,KAAK,EAAEH,QART;AASE,IAAA,QAAQ,EAAGG,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eAoCE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,uBADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,KAAK,EAAEF,SART;AASE,IAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CAFF,eAmDE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CAnDF,CADF,CADF,CADF,CADF;AAsED,CAlGD;;AAoGAT,QAAQ,CAACe,SAAT,GAAqB;AACnB3B,EAAAA,QAAQ,EAAEL,SAAS,CAACiC,IAAV,CAAeC,UADN;AAEnB5B,EAAAA,QAAQ,EAAEN,SAAS,CAACiC,IAAV,CAAeC,UAFN;AAGnBhB,EAAAA,aAAa,EAAElB,SAAS,CAACmC;AAHN,CAArB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,aAAa,EAAEmB,KAAK,CAACC,IAAN,CAAWpB;AADQ,CAAZ,CAAxB;;AAIA,eAAef,OAAO,CAACiC,eAAD,EAAkB;AAAE/B,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAiDW,QAAjD,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register, setProfile } from \"../../actions/auth\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBInput,\n  MDBNavLink,\n} from \"mdbreact\";\nimport axios from \"axios\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { Button } from \"reactstrap\";\n\n\nconst Register = ({ setAlert, register, authenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const { name, email, password, password2 } = formData;\n\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords do not match!\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (authenticated) {\n    return <Redirect to=\"/movies\" />;\n  }\n\n  return (\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol style={{ marginTop: \"80px\" }} md=\"6\">\n          <form onSubmit={(e) => onSubmit(e)}>\n            <h4>Sign up</h4>\n            <div className=\"\">\n              <MDBInput\n                label=\"Your name\"\n                icon=\"user\"\n                group\n                name=\"name\"\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                value={name}\n                onChange={(e) => onChange(e)}\n              />\n              <MDBInput\n                label=\"Your email\"\n                icon=\"envelope\"\n                group\n                name=\"email\"\n                type=\"email\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                value={email}\n                onChange={(e) => onChange(e)}\n              />\n              <MDBInput\n                label=\"Your password\"\n                icon=\"lock\"\n                group\n                name=\"password\"\n                type=\"password\"\n                validate\n                success=\"right\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n              <MDBInput\n                label=\"Confirm your password\"\n                icon=\"lock\"\n                group\n                name=\"password2\"\n                type=\"password\"\n                validate\n                error=\"wrong\"\n                value={password2}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"text-center\">\n              <MDBRow>\n                <MDBCol>\n                  <MDBBtn type=\"submit\" color=\"primary\">\n                    Register\n                  </MDBBtn>\n                </MDBCol>\n                <MDBCol></MDBCol>\n              </MDBRow>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.auth.authenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}