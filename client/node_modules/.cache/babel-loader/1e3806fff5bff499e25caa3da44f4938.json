{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { USER_LOADED, AUTH_ERROR, REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_FAIL, CLEAR_PROFILE, LOGOUT, LOGIN_SUCCESS } from \"./types\";\nimport { useAuth0 } from \"@auth0/auth0-react\"; // Load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/user\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/user\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    // const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout\n\nexport const logOut = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/actions/auth.js"],"names":["axios","setAlert","setAuthToken","USER_LOADED","AUTH_ERROR","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_FAIL","CLEAR_PROFILE","LOGOUT","LOGIN_SUCCESS","useAuth0","loadUser","dispatch","localStorage","token","res","get","type","payload","data","error","register","name","email","password","config","headers","body","JSON","stringify","post","err","errors","response","forEach","msg","login","console","log","logOut"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport {\n  USER_LOADED,\n  AUTH_ERROR,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_FAIL,\n  CLEAR_PROFILE,\n  LOGOUT,\n  LOGIN_SUCCESS,\n} from \"./types\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/user\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n\n  try {\n    const res = await axios.post(\"/api/user\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n\n    console.log(res)\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } \n  catch (err) {\n    // const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n\n\n// Logout\nexport const logOut = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n"]},"metadata":{},"sourceType":"module"}