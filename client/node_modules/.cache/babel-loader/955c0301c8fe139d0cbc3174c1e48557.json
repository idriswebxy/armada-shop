{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieDetails.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail, getMovieVideo } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport StarRatings from \"react-star-ratings\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport config from \"../../config.json\";\n\nconst MovieDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  isLoading_app,\n  voteAverage,\n  withRouter\n}) => {\n  const [videoKey, setVideoKey] = useState(\"\");\n  const [movieID, setMovieID] = useState(null);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${config.API_KEY}&language=en-US`).then(res => res.json()).then(data => setVideoKey(data.results[0].key));\n    loadCart();\n    window.scrollTo(0, 0);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(SpinnerPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let movieDetails = /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    middle: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    size: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w342${movie.poster_path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    onClick: () => addToCart(movie),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Add To Cart \", /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"cart-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(MDBCol, {\n    size: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    playing: \"true\",\n    controls: \"true\",\n    url: `https://www.youtube.com/watch?v=${videoKey}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(MDBCol, {\n    center: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, movie.title), \"\\xA0\", /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StarRatings, {\n    isSelectable: true,\n    starRatedColor: \"yellow\",\n    starDimension: \"30px\",\n    numberOfStars: 5,\n    rating: movie.vote_average / 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), \" \", \"\\xA0(\", movie.vote_count, \")\"), \"\\xA0\", /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, movie.overview)))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `linear-gradient(to right,\n          rgba(19, 38, 47, 0.7) 0%,\n          rgba(9, 28, 37, 0.7) 100%), url(https://image.tmdb.org/t/p/w1280${movie.backdrop_path})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      padding: \"186px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, movieDetails);\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  movie: state.movie.searchedMovie,\n  isLoading: state.movie.isLoading,\n  isLoading_app: state.auth.isLoading\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart\n})(MovieDetails));","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieDetails.js"],"names":["React","useEffect","useState","connect","getMovie","loadMovieDetail","getMovieVideo","addToCart","loadCart","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","loadMovieDetails","setMovie","SpinnerPage","StarRatings","ReactPlayer","PropTypes","withRouter","config","MovieDetails","movie","isLoading","isLoading_app","voteAverage","videoKey","setVideoKey","movieID","setMovieID","fetch","id","API_KEY","then","res","json","data","results","key","window","scrollTo","movieDetails","poster_path","title","vote_average","vote_count","overview","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","padding","propTypes","match","object","isRequired","location","history","mapStateToProps","state","searchedMovie","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail, getMovieVideo } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport StarRatings from \"react-star-ratings\";\nimport ReactPlayer from \"react-player/youtube\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport config from \"../../config.json\";\n\nconst MovieDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  isLoading_app,\n  voteAverage,\n  withRouter,\n}) => {\n  const [videoKey, setVideoKey] = useState(\"\");\n  const [movieID, setMovieID] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${config.API_KEY}&language=en-US`\n    )\n      .then((res) => res.json())\n      .then((data) => setVideoKey(data.results[0].key));\n    loadCart();\n    window.scrollTo(0, 0)\n\n  }, []);\n\n  if (isLoading) {\n    return <SpinnerPage />;\n  }\n\n  let movieDetails = (\n    <MDBContainer>\n      <MDBRow middle=\"true\">\n        <MDBCol size=\"4\">\n          <img src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`} />\n          <MDBCol>\n            <MDBBtn onClick={() => addToCart(movie)}>\n              Add To Cart <MDBIcon icon=\"cart-plus\" />\n            </MDBBtn>\n          </MDBCol>\n        </MDBCol>\n        <MDBCol size=\"\">\n          <ReactPlayer\n            playing=\"true\"\n            controls=\"true\"\n            url={`https://www.youtube.com/watch?v=${videoKey}`}\n          />\n          &nbsp;\n          <MDBCol center=\"true\">\n            <h2>{movie.title}</h2>\n            &nbsp;\n            <MDBCol>\n              <StarRatings\n                isSelectable\n                starRatedColor=\"yellow\"\n                starDimension=\"30px\"\n                numberOfStars={5}\n                rating={movie.vote_average / 2}\n              />{\" \"}\n              &nbsp;({movie.vote_count})\n            </MDBCol>\n            &nbsp;\n            <MDBCol>{movie.overview}</MDBCol>\n          </MDBCol>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to right,\n          rgba(19, 38, 47, 0.7) 0%,\n          rgba(9, 28, 37, 0.7) 100%), url(https://image.tmdb.org/t/p/w1280${movie.backdrop_path})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        padding: \"186px\",\n      }}\n    >\n      {movieDetails}\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  movie: state.movie.searchedMovie,\n  isLoading: state.movie.isLoading,\n  isLoading_app: state.auth.isLoading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    addToCart,\n    loadMovieDetails,\n    getMovie,\n    loadCart,\n  })(MovieDetails)\n);\n"]},"metadata":{},"sourceType":"module"}