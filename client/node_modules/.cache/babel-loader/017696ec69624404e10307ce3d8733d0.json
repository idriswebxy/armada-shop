{"ast":null,"code":"import { GET_MOVIE, GET_MOVIE_ERR, SET_MOVIES, CHANGE_LOAD, SET_MOVIE_ERR, SET_SEARCHED_MOVIE, CLEAR_MOVIE, GET_SEARCHED_MOVIE, LOAD_MOVIE_DETAILS, SET_TVSHOWS_ERR, SET_TVSHOWS, GET_SHOW, SET_RELATED_MOVIES, SET_GENRE_ID, PREV_PAGE, NEXT_PAGE, GET_RELATED_MOVIE_ID, SET_VIDEO_KEY, SET_MOVIE_ID, SET_MOVIE_IDS } from \"../actions/types\";\nconst initialState = {\n  isLoading: true,\n  movies: [],\n  tvShows: [],\n  searchedMovie: null,\n  searchedShow: null,\n  relatedMovie: null,\n  relatedMovies: [],\n  relatedId: null,\n  videoKey: \"\",\n  movieId: null,\n  page: 1,\n  movieIds: [],\n  error: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_MOVIE:\n      return { ...state,\n        searchedMovie: state.movies.find(movie => movie.id === payload)\n      };\n\n    case SET_MOVIE_ID:\n      return { ...state,\n        movieId: payload\n      };\n\n    case GET_SHOW:\n      return { ...state,\n        searchedShow: state.tvShows.find(show => show.id === payload),\n        isLoading: false\n      };\n\n    case GET_SEARCHED_MOVIE:\n      return { ...state,\n        searchedMovie: state.searchedMovie.find(movie => movie.id === payload)\n      };\n\n    case GET_RELATED_MOVIE_ID:\n      return { ...state,\n        searchedMovie: state.relatedMovies.find(movie => movie.id === payload)\n      };\n\n    case CLEAR_MOVIE:\n      return { ...state,\n        searchedMovie: null\n      };\n\n    case SET_RELATED_MOVIES:\n      return { ...state,\n        relatedMovies: payload\n      };\n\n    case SET_TVSHOWS_ERR:\n      return {\n        error: payload\n      };\n\n    case GET_MOVIE_ERR:\n      return;\n\n    case SET_SEARCHED_MOVIE:\n      return { ...state,\n        searchedMovie: payload\n      };\n\n    case SET_TVSHOWS:\n      return { ...state,\n        tvShows: payload,\n        isLoading: false\n      };\n\n    case SET_GENRE_ID:\n      return { ...state,\n        relatedId: payload\n      };\n\n    case SET_MOVIES:\n      return { ...state,\n        movies: payload,\n        isLoading: false\n      };\n\n    case SET_MOVIE_ERR:\n      return null;\n\n    case LOAD_MOVIE_DETAILS:\n      return { ...state,\n        searchedMovie: payload,\n        isLoading: false,\n        currentMovie: payload\n      };\n\n    case NEXT_PAGE:\n      return { ...state,\n        page: payload + 1\n      };\n\n    case PREV_PAGE:\n      return { ...state,\n        page: payload - 1\n      };\n\n    case CHANGE_LOAD:\n      return { ...state,\n        isLoading: true\n      };\n\n    case SET_VIDEO_KEY:\n      return { ...state,\n        videoKey: payload\n      };\n\n    case SET_MOVIE_IDS:\n      return { ...state,\n        movieIds: state.movieIds.push(payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/reducers/movie.js"],"names":["GET_MOVIE","GET_MOVIE_ERR","SET_MOVIES","CHANGE_LOAD","SET_MOVIE_ERR","SET_SEARCHED_MOVIE","CLEAR_MOVIE","GET_SEARCHED_MOVIE","LOAD_MOVIE_DETAILS","SET_TVSHOWS_ERR","SET_TVSHOWS","GET_SHOW","SET_RELATED_MOVIES","SET_GENRE_ID","PREV_PAGE","NEXT_PAGE","GET_RELATED_MOVIE_ID","SET_VIDEO_KEY","SET_MOVIE_ID","SET_MOVIE_IDS","initialState","isLoading","movies","tvShows","searchedMovie","searchedShow","relatedMovie","relatedMovies","relatedId","videoKey","movieId","page","movieIds","error","state","action","type","payload","find","movie","id","show","currentMovie","push"],"mappings":"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","sourcesContent":["import {\n  GET_MOVIE,\n  GET_MOVIE_ERR,\n  SET_MOVIES,\n  CHANGE_LOAD,\n  SET_MOVIE_ERR,\n  SET_SEARCHED_MOVIE,\n  CLEAR_MOVIE,\n  GET_SEARCHED_MOVIE,\n  LOAD_MOVIE_DETAILS,\n  SET_TVSHOWS_ERR,\n  SET_TVSHOWS,\n  GET_SHOW,\n  SET_RELATED_MOVIES,\n  SET_GENRE_ID,\n  PREV_PAGE,\n  NEXT_PAGE,\n  GET_RELATED_MOVIE_ID,\n  SET_VIDEO_KEY,\n  SET_MOVIE_ID,\n  SET_MOVIE_IDS,\n} from \"../actions/types\";\n\nconst initialState = {\n  isLoading: true,\n  movies: [],\n  tvShows: [],\n  searchedMovie: null,\n  searchedShow: null,\n  relatedMovie: null,\n  relatedMovies: [],\n  relatedId: null,\n  videoKey: \"\",\n  movieId: null,\n  page: 1,\n  movieIds: [],\n  error: null\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_MOVIE:\n      return {\n        ...state,\n        searchedMovie: state.movies.find((movie) => movie.id === payload),\n      };\n    case SET_MOVIE_ID:\n      return {\n        ...state,\n        movieId: payload,\n      };\n    case GET_SHOW:\n      return {\n        ...state,\n        searchedShow: state.tvShows.find((show) => show.id === payload),\n        isLoading: false,\n      };\n    case GET_SEARCHED_MOVIE:\n      return {\n        ...state,\n        searchedMovie: state.searchedMovie.find(\n          (movie) => movie.id === payload\n        ),\n      };\n    case GET_RELATED_MOVIE_ID:\n      return {\n        ...state,\n        searchedMovie: state.relatedMovies.find(\n          (movie) => movie.id === payload\n        ),\n      };\n    case CLEAR_MOVIE:\n      return {\n        ...state,\n        searchedMovie: null,\n      };\n    case SET_RELATED_MOVIES:\n      return {\n        ...state,\n        relatedMovies: payload,\n      };\n    case SET_TVSHOWS_ERR:\n      return {\n        error: payload\n      }\n    case GET_MOVIE_ERR:\n      return;\n    case SET_SEARCHED_MOVIE:\n      return {\n        ...state,\n        searchedMovie: payload,\n      };\n    case SET_TVSHOWS:\n      return {\n        ...state,\n        tvShows: payload,\n        isLoading: false,\n      };\n    case SET_GENRE_ID:\n      return {\n        ...state,\n        relatedId: payload,\n      };\n    case SET_MOVIES:\n      return {\n        ...state,\n        movies: payload,\n        isLoading: false,\n      };\n    case SET_MOVIE_ERR:\n      return null;\n    case LOAD_MOVIE_DETAILS:\n      return {\n        ...state,\n        searchedMovie: payload,\n        isLoading: false,\n        currentMovie: payload,\n      };\n    case NEXT_PAGE:\n      return {\n        ...state,\n        page: payload + 1,\n      };\n    case PREV_PAGE:\n      return {\n        ...state,\n        page: payload - 1,\n      };\n    case CHANGE_LOAD:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case SET_VIDEO_KEY:\n      return {\n        ...state,\n        videoKey: payload\n      };\n    case SET_MOVIE_IDS:\n      return {\n        ...state,\n        movieIds: state.movieIds.push(payload)\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}