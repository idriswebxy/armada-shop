{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShows.js\";\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport { setTvShowsReducer } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport { nextPage, prevPage } from \"../../actions/movie\";\nimport SearchPage from \"../Search/Search\";\nimport Show from \"./Show\";\nimport RelatedMovies from \"../Movies/RelatedMovies\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBAnimation, MDBBtn, MDBIcon } from \"mdbreact\";\nimport { set } from \"mongoose\";\n\nconst TvShows = ({\n  setTvShowsReducer,\n  loadCart,\n  isLoading,\n  getRelatedMovies,\n  tvShows,\n  page,\n  nextPage,\n  prevPage\n}) => {\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${config.API_KEY}&language=en-US&page=${page}`).then(res => res.json()).then(data => {\n      setTvShowsReducer(data.results);\n      loadCart();\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(SpinnerPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const loadMore = () => {\n    fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${config.API_KEY}&language=en-US&page=${page = +1}`).then(res => res.json()).then(data => {\n      setTvShowsReducer(data.results);\n    });\n  }; // page transition\n\n\n  let pages = /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"Page navigation example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn // to={`/movies/${page}`}\n  , {\n    onClick: () => prevPage(page),\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    className: \"white-text pr-3\",\n    size: \"2x\",\n    icon: \"angle-double-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), \"\\xA0 \\xA0 \\xA0 Page: \", page, \" \\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/React.createElement(MDBBtn, {\n    onClick: () => nextPage(page),\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    className: \"white-text pr-3\",\n    size: \"2x\",\n    icon: \"angle-double-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n  let shows = /*#__PURE__*/React.createElement(MDBAnimation, {\n    type: \"zoomIn\",\n    duration: \"1s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, tvShows.map((tvShow, key) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      key: key,\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hover-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Show, {\n      id: tvShow.id,\n      title: tvShow.name,\n      image: tvShow.poster_path,\n      overview: tvShow.overview,\n      tvShowObj: tvShow,\n      price: 2.99,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })));\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, shows), /*#__PURE__*/React.createElement(MDBBtn, {\n    onClick: () => loadMore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Load More\"), /*#__PURE__*/React.createElement(RelatedMovies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  tvShows: state.movie.tvShows,\n  page: state.movie.page\n});\n\nexport default connect(mapStateToProps, {\n  setTvShowsReducer,\n  loadCart,\n  nextPage,\n  prevPage\n})(TvShows);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShows.js"],"names":["React","useEffect","useState","config","setTvShowsReducer","connect","SpinnerPage","addToCart","loadCart","getCart","nextPage","prevPage","SearchPage","Show","RelatedMovies","MDBContainer","MDBRow","MDBCol","MDBView","MDBAnimation","MDBBtn","MDBIcon","set","TvShows","isLoading","getRelatedMovies","tvShows","page","fetch","API_KEY","then","res","json","data","results","loadMore","pages","shows","map","tvShow","key","id","name","poster_path","overview","mapStateToProps","state","userId","auth","userInfo","_id","movie","authenticated"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"../../config.json\";\nimport { setTvShowsReducer } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\nimport SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport { nextPage, prevPage } from \"../../actions/movie\"\nimport SearchPage from \"../Search/Search\";\nimport Show from \"./Show\";\nimport RelatedMovies from \"../Movies/RelatedMovies\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBAnimation, MDBBtn, MDBIcon } from \"mdbreact\";\nimport { set } from \"mongoose\";\n\n\nconst TvShows = ({\n  setTvShowsReducer,\n  loadCart,\n  isLoading,\n  getRelatedMovies,\n  tvShows,\n  page,\n  nextPage,\n  prevPage\n}) => {\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/tv?api_key=${config.API_KEY}&language=en-US&page=${page}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setTvShowsReducer(data.results);\n        loadCart();\n      });\n  }, []);\n\n\n  if (isLoading) {\n    return <SpinnerPage />;\n  }\n\n\n  const loadMore = () => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/tv?api_key=${config.API_KEY}&language=en-US&page=${page =+ 1}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setTvShowsReducer(data.results)\n      });\n  }\n\n\n\n  // page transition\n  let pages = (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        <MDBBtn\n          // to={`/movies/${page}`}\n          onClick={() => prevPage(page)}\n          className=\"page-item\"\n        >\n          <MDBIcon\n            className=\"white-text pr-3\"\n            size=\"2x\"\n            icon=\"angle-double-left\"\n          />\n        </MDBBtn>\n        &nbsp; &nbsp; &nbsp; Page: {page} &nbsp; &nbsp; &nbsp;\n        &nbsp;\n        <MDBBtn\n          onClick={() => nextPage(page)}\n          className=\"page-item\"\n        >\n          <MDBIcon\n            className=\"white-text pr-3\"\n            size=\"2x\"\n            icon=\"angle-double-right\"\n          />\n        </MDBBtn>\n      </ul>\n    </nav>\n  );\n\n\n\n\n  let shows = (\n    <MDBAnimation type=\"zoomIn\" duration=\"1s\">\n      <MDBRow>\n        {tvShows.map((tvShow, key) => {\n          return (\n            <MDBCol key={key} size=\"3\">\n              <div className=\"hover-movie\">\n                <Show\n                  id={tvShow.id}\n                  title={tvShow.name}\n                  image={tvShow.poster_path}\n                  overview={tvShow.overview}\n                  tvShowObj={tvShow}\n                  price={2.99}\n                />\n              </div>\n            </MDBCol>\n          );\n        })}\n      </MDBRow>\n    </MDBAnimation>\n  );\n\n  return (\n    <div>\n      <SearchPage />\n      <MDBContainer>{shows}</MDBContainer>\n      <MDBBtn onClick={() => loadMore()}>Load More</MDBBtn>\n      <RelatedMovies />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  tvShows: state.movie.tvShows,\n  page: state.movie.page,\n\n});\n\nexport default connect(mapStateToProps, {\n  setTvShowsReducer,\n  loadCart,\n  nextPage,\n  prevPage\n})(TvShows);\n"]},"metadata":{},"sourceType":"module"}