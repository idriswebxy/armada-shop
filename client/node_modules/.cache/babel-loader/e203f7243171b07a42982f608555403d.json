{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport MainImage from \"../MainImage/MainImage\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { fetchItems, nextPage, prevPage // loadMore,\n, loadMovies, loadChange } from \"../../actions/movie\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport \"./MovieList.css\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  loadMore,\n  fetchItems\n}) => {\n  // const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [mainImage, setMainImage] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  useEffect(() => {\n    loadChange(true);\n    let endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchItems(endpoint);\n    loadCart();\n  }, []);\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading(true);\n\n    if (searchTerm === \"\") {\n      setCurrentPage(currentPage + 1);\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${searchTerm}$page=${currentPage}`;\n    }\n\n    fetchItems(endpoint);\n  };\n\n  const movieList = /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, movies.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      middle: \"true\",\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Movie, {\n      index: index,\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }));\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FourColGrid, {\n    header: searchTerm ? \"Search Result\" : \"Popular Movies\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, movies.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(Movie, {\n      index: index,\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    });\n  })), isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 22\n    }\n  }) : null, currentPage <= totalPages && !loading ? /*#__PURE__*/React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    onClick: () => loadMoreItems(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }) : null));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  fetchItems,\n  loadChange\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","Spinner","LoadMoreBtn","MainImage","FourColGrid","MovieThumb","addToCart","loadCart","fetchItems","nextPage","prevPage","loadMovies","loadChange","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBBtn","useAuth0","useHistory","MovieList","isLoading","movies","loadMore","loading","setLoading","searchTerm","setSearchTerm","currentPage","setCurrentPage","mainImage","setMainImage","totalPages","setTotalPages","getAccessTokenSilently","isAuthenticated","user","history","endpoint","loadMoreItems","movieList","map","movie","index","id","title","poster_path","overview","release_date","mapStateToProps","state","userId","auth","userInfo","_id","authenticated","page","moviePage","searchedMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport MainImage from \"../MainImage/MainImage\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport {\n  fetchItems,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  loadChange,\n} from \"../../actions/movie\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from \"../../config\";\nimport \"./MovieList.css\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  loadMore,\n  fetchItems,\n}) => {\n  // const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [mainImage, setMainImage] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    loadChange(true);\n    let endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchItems(endpoint);\n    loadCart();\n  }, []);\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading(true);\n\n    if (searchTerm === \"\") {\n      setCurrentPage(currentPage + 1)\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${searchTerm}$page=${currentPage}`;\n    }\n    fetchItems(endpoint);\n  };\n\n  const movieList = (\n    <MDBRow>\n      {movies.map((movie, index) => {\n        return (\n          <MDBCol middle=\"true\" size=\"3\">\n            <Movie\n              index={index}\n              id={movie.id}\n              addToCart={addToCart}\n              title={movie.title}\n              image={movie.poster_path}\n              overview={movie.overview}\n              releaseDate={movie.release_date}\n              price={2.99}\n              movieObj={movie}\n            />\n          </MDBCol>\n        );\n      })}\n    </MDBRow>\n  );\n\n  return (\n    <div className=\"rmdb-home\">\n      {/* {mainImage ? (\n        <div>\n          <MainImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${mainImage.backdrop_path}`}\n            title={mainImage.original_title}\n            text={mainImage.overview}\n          />\n          <SearchPage callback={() => searchItems()} />\n        </div>\n      ) : null} */}\n      <div className=\"rmdb-home-grid\">\n        <FourColGrid\n          header={searchTerm ? \"Search Result\" : \"Popular Movies\"}\n          loading={loading}\n        >\n          {movies.map((movie, index) => {\n            return (\n              <Movie\n                index={index}\n                id={movie.id}\n                addToCart={addToCart}\n                title={movie.title}\n                image={movie.poster_path}\n                overview={movie.overview}\n                releaseDate={movie.release_date}\n                price={2.99}\n                movieObj={movie}\n              />\n            );\n          })}\n        </FourColGrid>\n        {isLoading ? <Spinner /> : null}\n        {currentPage <= totalPages && !loading ? (\n          <LoadMoreBtn text=\"Load More\" onClick={() => loadMoreItems()} />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  fetchItems,\n  loadChange,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}