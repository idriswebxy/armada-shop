{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport MainImage from \"../MainImage/MainImage\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { fetchItems, nextPage, prevPage // loadMore,\n, loadMovies, loadChange, loadMoreItems } from \"../../actions/movie\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport \"./MovieList.css\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  loadMore,\n  fetchItems,\n  page,\n  totalPages,\n  loadChange,\n  nextPage,\n  loadMovies,\n  loadMoreItems\n}) => {\n  // let [currentPage, setCurrentPage] = useState(1);\n  const {\n    getAccessTokenSilently,\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  let endpoint = \"\";\n  useEffect(() => {\n    if (movies.length <= 20) {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      fetchItems(endpoint);\n      loadCart();\n    } else {\n      loadCart();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, movies.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Movie, {\n      index: index,\n      id: movie.id,\n      addToCart: addToCart,\n      title: movie.title,\n      image: movie.poster_path,\n      overview: movie.overview,\n      releaseDate: movie.release_date,\n      price: 2.99,\n      movieObj: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }));\n  })), isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }\n  }) : null, page <= totalPages && !isLoading ? /*#__PURE__*/React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    onClick: () => loadMoreItems(endpoint, page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }) : null)));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n  totalPages: state.movie.totalPages\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  fetchItems,\n  loadChange,\n  loadMoreItems\n})(MovieList);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/Movies/MovieList.js"],"names":["React","useEffect","useState","Spinner","LoadMoreBtn","MainImage","FourColGrid","MovieThumb","addToCart","loadCart","fetchItems","nextPage","prevPage","loadMovies","loadChange","loadMoreItems","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","connect","Movie","SearchPage","MDBContainer","MDBRow","MDBCol","MDBBtn","useAuth0","useHistory","MovieList","isLoading","movies","loadMore","page","totalPages","getAccessTokenSilently","isAuthenticated","user","history","endpoint","length","map","movie","index","id","title","poster_path","overview","release_date","mapStateToProps","state","userId","auth","userInfo","_id","authenticated","moviePage","searchedMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport MainImage from \"../MainImage/MainImage\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport {\n  fetchItems,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  loadChange,\n  loadMoreItems,\n} from \"../../actions/movie\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from \"../../config\";\nimport \"./MovieList.css\";\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport SearchPage from \"../Search/Search\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport \"../../App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MovieList = ({\n  addToCart,\n  loadCart,\n  isLoading,\n  movies,\n  loadMore,\n  fetchItems,\n  page,\n  totalPages,\n  loadChange,\n  nextPage,\n  loadMovies,\n  loadMoreItems,\n}) => {\n  // let [currentPage, setCurrentPage] = useState(1);\n\n  const { getAccessTokenSilently, isAuthenticated, user } = useAuth0();\n\n  const history = useHistory();\n\n  let endpoint = \"\";\n\n  useEffect(() => {\n    if (movies.length <= 20) {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      fetchItems(endpoint);\n      loadCart();\n    } else {\n      loadCart();\n    }\n  }, []);\n\n  return (\n    <MDBContainer>\n      <div className=\"rmdb-home\">\n        <div className=\"rmdb-home-grid\">\n          <MDBRow>\n            {movies.map((movie, index) => {\n              return (\n                <MDBCol size=\"3\">\n                  <Movie\n                    index={index}\n                    id={movie.id}\n                    addToCart={addToCart}\n                    title={movie.title}\n                    image={movie.poster_path}\n                    overview={movie.overview}\n                    releaseDate={movie.release_date}\n                    price={2.99}\n                    movieObj={movie}\n                  />\n                </MDBCol>\n              );\n            })}\n          </MDBRow>\n          {isLoading ? <Spinner /> : null}\n          {page <= totalPages && !isLoading ? (\n            <LoadMoreBtn\n              text=\"Load More\"\n              onClick={() => loadMoreItems(endpoint, page)}\n            />\n          ) : null}\n        </div>\n      </div>\n    </MDBContainer>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  movies: state.movie.movies,\n  page: state.movie.moviePage,\n  searchedMovie: state.movie.searchedMovie,\n  totalPages: state.movie.totalPages,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadCart,\n  nextPage,\n  prevPage,\n  // loadMore,\n  loadMovies,\n  fetchItems,\n  loadChange,\n  loadMoreItems,\n})(MovieList);\n"]},"metadata":{},"sourceType":"module"}