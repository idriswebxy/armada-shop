{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShowDetails.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\nimport Spinner from \"../Spinner/Spinner\";\nimport StarRatings from \"react-star-ratings\";\n\nconst TvShowDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  tvShow\n}) => {\n  useEffect(() => {\n    loadCart();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let tvShowDetails = /*#__PURE__*/React.createElement(MDBContainer, {\n    fluid: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    center: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-details-container\",\n    style: {\n      background: tvShow.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${tvShow.backdrop_path}')` : \"#000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MovieThumb, {\n    image: tvShow.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${tvShow.poster_path}` : \"./images/no_image.jpg\",\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, tvShow.title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"PLOT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, tvShow.overview), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"IMDB RATING\"), /*#__PURE__*/React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: tvShow.vote_average * 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, tvShow.vote_average)), /*#__PURE__*/React.createElement(ReactPlayer, {\n    playing: \"\",\n    controls: \"true\",\n    url: `https://www.youtube.com/watch?v=${videoKey}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }))) // <div\n  //   style={{\n  //     backgroundImage: `linear-gradient(to right,\n  //     rgba(19, 38, 47, 0.925) 0%,\n  //     rgba(9, 28, 37, 0.925) 100%), url(https://image.tmdb.org/t/p/w1280${tvShow.backdrop_path})`,\n  //     backgroundRepeat: \"no-repeat\",\n  //     backgroundSize: \"cover\",\n  //     padding: \"186px\",\n  //   }}\n  // >\n  //   <MDBContainer>\n  //     <MDBRow>\n  //       <MDBCol size=\"4\">\n  //         <img src={`https://image.tmdb.org/t/p/w342${tvShow.poster_path}`} />\n  //         <MDBCol className=\"movie-details-spacing\">\n  //           <MDBBtn onClick={() => addToCart(tvShow)}>\n  //             Add To Cart <MDBIcon icon=\"cart-plus\" />\n  //           </MDBBtn>\n  //         </MDBCol>\n  //       </MDBCol>\n  //       <MDBCol>\n  //         <MDBCol className=\"movie-details-spacing\">\n  //           <h3>{tvShow.name}</h3>\n  //         </MDBCol>\n  //         <MDBCol>\n  //           <MDBCol>\n  //             <StarRatings\n  //               isSelectable\n  //               starRatedColor=\"yellow\"\n  //               starDimension=\"30px\"\n  //               numberOfStars={5}\n  //               rating={tvShow.vote_average / 2}\n  //             />{\" \"}\n  //             ({tvShow.vote_count}){\" \"}\n  //           </MDBCol>\n  //           <MDBCol className=\"movie-details-spacing\">\n  //             <h6>{tvShow.overview}</h6>\n  //           </MDBCol>\n  //         </MDBCol>\n  //       </MDBCol>\n  //     </MDBRow>\n  //   </MDBContainer>\n  // </div>\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }, tvShowDetails);\n};\n\nconst mapStateToProps = state => ({\n  tvShow: state.movie.searchedShow,\n  isLoading: state.movie.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart\n})(TvShowDetails);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShowDetails.js"],"names":["React","useEffect","useState","connect","getMovie","loadMovieDetail","addToCart","loadCart","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","loadMovieDetails","setMovie","Spinner","StarRatings","TvShowDetails","movie","isLoading","tvShow","tvShowDetails","background","backdrop_path","IMAGE_BASE_URL","BACKDROP_SIZE","poster_path","POSTER_SIZE","title","overview","vote_average","videoKey","mapStateToProps","state","searchedShow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovie, loadMovieDetail } from \"../../actions/movie\";\nimport { addToCart, loadCart } from \"../../actions/cart\";\nimport { MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { loadMovieDetails, setMovie } from \"../../actions/movie\";\nimport Spinner from \"../Spinner/Spinner\";\nimport StarRatings from \"react-star-ratings\";\n\nconst TvShowDetails = ({\n  movie,\n  addToCart,\n  isLoading,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n  tvShow,\n}) => {\n  useEffect(() => {\n    loadCart();\n  }, []);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  let tvShowDetails = (\n\n\n    <MDBContainer fluid size=\"lg\">\n      <MDBRow center=\"true\">\n        <div\n          className=\"movie-details-container\"\n          style={{\n            background: tvShow.backdrop_path\n              ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${tvShow.backdrop_path}')`\n              : \"#000\",\n          }}\n        >\n          <MovieThumb\n            image={\n              tvShow.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${tvShow.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            clickable={false}\n          />\n        </div>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <h1>{tvShow.title}</h1>\n          <h3>PLOT</h3>\n          <p>{tvShow.overview}</p>\n          <h3>IMDB RATING</h3>\n\n          <meter\n            min=\"0\"\n            max=\"100\"\n            optimum=\"100\"\n            low=\"40\"\n            high=\"70\"\n            value={tvShow.vote_average * 10}\n          />\n          <p className=\"rmdb-score\">{tvShow.vote_average}</p>\n        </MDBCol>\n        <ReactPlayer\n          playing=\"\"\n          controls=\"true\"\n          url={`https://www.youtube.com/watch?v=${videoKey}`}\n        />\n      </MDBRow>\n    </MDBContainer>\n\n\n    // <div\n    //   style={{\n    //     backgroundImage: `linear-gradient(to right,\n    //     rgba(19, 38, 47, 0.925) 0%,\n    //     rgba(9, 28, 37, 0.925) 100%), url(https://image.tmdb.org/t/p/w1280${tvShow.backdrop_path})`,\n    //     backgroundRepeat: \"no-repeat\",\n    //     backgroundSize: \"cover\",\n    //     padding: \"186px\",\n    //   }}\n    // >\n    //   <MDBContainer>\n    //     <MDBRow>\n    //       <MDBCol size=\"4\">\n    //         <img src={`https://image.tmdb.org/t/p/w342${tvShow.poster_path}`} />\n    //         <MDBCol className=\"movie-details-spacing\">\n    //           <MDBBtn onClick={() => addToCart(tvShow)}>\n    //             Add To Cart <MDBIcon icon=\"cart-plus\" />\n    //           </MDBBtn>\n    //         </MDBCol>\n    //       </MDBCol>\n    //       <MDBCol>\n    //         <MDBCol className=\"movie-details-spacing\">\n    //           <h3>{tvShow.name}</h3>\n    //         </MDBCol>\n    //         <MDBCol>\n    //           <MDBCol>\n    //             <StarRatings\n    //               isSelectable\n    //               starRatedColor=\"yellow\"\n    //               starDimension=\"30px\"\n    //               numberOfStars={5}\n    //               rating={tvShow.vote_average / 2}\n    //             />{\" \"}\n    //             ({tvShow.vote_count}){\" \"}\n    //           </MDBCol>\n    //           <MDBCol className=\"movie-details-spacing\">\n    //             <h6>{tvShow.overview}</h6>\n    //           </MDBCol>\n    //         </MDBCol>\n    //       </MDBCol>\n    //     </MDBRow>\n    //   </MDBContainer>\n    // </div>\n  );\n\n  return <div>{tvShowDetails}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n  tvShow: state.movie.searchedShow,\n  isLoading: state.movie.isLoading,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart,\n  loadMovieDetails,\n  getMovie,\n  loadCart,\n})(TvShowDetails);\n"]},"metadata":{},"sourceType":"module"}