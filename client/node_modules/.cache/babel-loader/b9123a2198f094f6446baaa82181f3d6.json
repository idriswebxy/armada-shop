{"ast":null,"code":"var _jsxFileName = \"/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShows.js\";\nimport React, { useEffect, useState } from \"react\"; // import config from \"../../config.json\";\n\nimport { API_KEY } from \"../../config\";\nimport { setTvShowsReducer } from \"../../actions/movie\";\nimport { connect } from \"react-redux\"; // import SpinnerPage from \"../Layout/SpinnerPage\";\n\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport { nextPage, prevPage } from \"../../actions/movie\";\nimport SearchBar from \"../Search/Search\";\nimport Show from \"./Show\";\nimport RelatedMovies from \"../Movies/RelatedMovies\";\nimport { MDBContainer, MDBRow, MDBCol, MDBView, MDBAnimation, MDBBtn, MDBIcon } from \"mdbreact\";\nimport \"../Movies/MovieList.css\";\n\nconst TvShows = ({\n  setTvShowsReducer,\n  loadCart,\n  isLoading,\n  getRelatedMovies,\n  tvShows,\n  // page,\n  nextPage,\n  prevPage\n}) => {\n  let [page, setPage] = useState(1);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&page=${page}`).then(res => res.json()).then(data => {\n      setTvShowsReducer(data.results);\n      loadCart();\n    });\n  }, [page]);\n  let shows = /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-home-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, tvShows.map((tvShow, index) => {\n    return /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Show, {\n      index: index,\n      id: tvShow.id,\n      title: tvShow.name,\n      image: tvShow.poster_path,\n      overview: tvShow.overview,\n      tvShowObj: tvShow,\n      price: 2.99,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }));\n  })))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), shows);\n};\n\nconst mapStateToProps = state => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  tvShows: state.movie.tvShows // page: state.movie.page,\n\n});\n\nexport default connect(mapStateToProps, {\n  setTvShowsReducer,\n  loadCart,\n  nextPage,\n  prevPage\n})(TvShows);","map":{"version":3,"sources":["/Users/enoch/dev/movie-shop/client/src/components/TvShows/TvShows.js"],"names":["React","useEffect","useState","API_KEY","setTvShowsReducer","connect","addToCart","loadCart","getCart","nextPage","prevPage","SearchBar","Show","RelatedMovies","MDBContainer","MDBRow","MDBCol","MDBView","MDBAnimation","MDBBtn","MDBIcon","TvShows","isLoading","getRelatedMovies","tvShows","page","setPage","fetch","then","res","json","data","results","shows","map","tvShow","index","id","name","poster_path","overview","mapStateToProps","state","userId","auth","userInfo","_id","movie","authenticated"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import config from \"../../config.json\";\nimport { API_KEY } from \"../../config\";\nimport { setTvShowsReducer } from \"../../actions/movie\";\nimport { connect } from \"react-redux\";\n// import SpinnerPage from \"../Layout/SpinnerPage\";\nimport { addToCart, loadCart, getCart } from \"../../actions/cart\";\nimport { nextPage, prevPage } from \"../../actions/movie\";\nimport SearchBar from \"../Search/Search\";\nimport Show from \"./Show\";\nimport RelatedMovies from \"../Movies/RelatedMovies\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBAnimation,\n  MDBBtn,\n  MDBIcon,\n} from \"mdbreact\";\nimport \"../Movies/MovieList.css\";\n\nconst TvShows = ({\n  setTvShowsReducer,\n  loadCart,\n  isLoading,\n  getRelatedMovies,\n  tvShows,\n  // page,\n  nextPage,\n  prevPage,\n}) => {\n  let [page, setPage] = useState(1);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&page=${page}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setTvShowsReducer(data.results);\n        loadCart();  \n      });\n  }, [page]);\n\n  let shows = (\n    <MDBContainer>\n      <div className=\"rmdb-home\">\n        <div className=\"rmdb-home-grid\">\n          <MDBRow>\n            {tvShows.map((tvShow, index) => {\n              return (\n                <MDBCol md=\"3\">\n                  <Show\n                    index={index}\n                    id={tvShow.id}\n                    title={tvShow.name}\n                    image={tvShow.poster_path}\n                    overview={tvShow.overview}\n                    tvShowObj={tvShow}\n                    price={2.99}\n                  />\n                </MDBCol>\n              );\n            })}\n          </MDBRow>\n        </div>\n      </div>\n    </MDBContainer>\n  );\n\n  return (\n    <div>\n      <SearchBar />\n      {shows}\n    </div>\n  );\n\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.userInfo._id,\n  isLoading: state.movie.isLoading,\n  authenticated: state.auth.authenticated,\n  tvShows: state.movie.tvShows,\n  // page: state.movie.page,\n});\n\nexport default connect(mapStateToProps, {\n  setTvShowsReducer,\n  loadCart,\n  nextPage,\n  prevPage,\n})(TvShows);\n"]},"metadata":{},"sourceType":"module"}